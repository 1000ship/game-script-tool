{"version":3,"sources":["Components/ControlMenu.js","Components/Partials/ScriptBlock.js","Utils/api.js","Components/ScriptView.js","Components/ScriptInput.js","Utils/Constant.js","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","ControlButton","button","ControlMenu","toggleSceneForm","onClick","e","SceneID","CharacterName","SceneScript","OptionGroup","FileDescription","span","Script","props","color","MenuGroup","ul","MenuItem","li","ScriptBlock","sceneId","characterName","sceneScript","characterImage","backgroundImage","sceneSound","options","nextSceneId","sceneType","moveBlockBy","removeBlock","length","map","i","answer","reaction","nextId","key","saveBlockList","blockList","localStorage","setItem","JSON","stringify","alert","ScriptView","setBlockList","by","index","findIndex","block","at","tmpArray","slice","result","window","confirm","removeIndex","concat","isOpend","InputGroup","InputPair","Label","label","TextInput","input","TextArea","textarea","ScriptInput","createNewBlock","defaultState","useState","formData","setFormData","onInputChange","target","name","value","dataset","optionIndex","dataValue","undefined","data","Object","assign","id","data-value","type","checked","onChange","htmlFor","placeholder","style","display","flex","data-option-index","find","BlockContainer","App","cachedBlockList","parse","getItem","loadBlockList","isSceneFormOpened","setIsSceneFormOpened","opened","blockData","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.309710cb.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  position: fixed;\n  right: 5px;\n  bottom: 5px;\n  z-index: 1;\n  display: flex;\n  flex-direction: column;\n`\n\nconst ControlButton = styled.button`\n  padding: 5px 5px;\n`\n\nconst ControlMenu = ({toggleSceneForm}) => {\n\n  const onAddSceneBlockClick = (e) => {\n    toggleSceneForm()\n  }\n\n  const onAddEndingBlockClick = (e) => {\n\n  }\n\n  const onImportClick = (e) => {\n\n  }\n\n  const onExportClick = (e) => {\n    \n  }\n\n  return <Container>\n    <ControlButton onClick={onAddSceneBlockClick}>Add Scene Block</ControlButton>\n    <ControlButton onClick={onAddEndingBlockClick}>Add Ending Block</ControlButton>\n    <ControlButton onClick={onImportClick}>Import Script</ControlButton>\n    <ControlButton onClick={onExportClick}>Export Script</ControlButton>\n  </Container>;\n};\n\nexport default ControlMenu","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  background-color: #efefef;\n  padding: 10px;\n  margin: 5px;\n  position: relative;\n`;\nconst SceneID = styled.div`\n  font-weight: 800;\n  cursor: pointer;\n  & small {\n    font-weight: 400;\n    cursor: default;\n    margin-left: 8px;\n  }\n`;\nconst CharacterName = styled.div`\n  font-style: italic;\n  margin-top: 5px;\n`;\nconst SceneScript = styled.div`\n  margin-top: 5px;\n  background-color: white;\n  padding: 5px;\n  border-radius: 3px;\n`;\nconst OptionGroup = styled.div``;\nconst FileDescription = styled.span`\n  margin-right: 10px;\n  font-size: 13px;\n`;\nconst Script = styled.span`\n  background-color: ${props => props.color ? props.color : 'white'};\n  border-radius: 5px;\n  padding: 3px;\n  display: inline-block;\n`;\n\nconst MenuGroup = styled.ul`\n  margin: 0px;\n  padding: 0px;\n  list-style: none;\n  position: absolute;\n  right: 5px;\n  top: 5px;\n  display: flex;\n`;\nconst MenuItem = styled.li`\n  font-size: 12px;\n  margin-left: 6px;\n  cursor: pointer;\n  &:hover {\n    font-weight: bolder;\n  }\n`;\n\nfunction ScriptBlock(props) {\n  var {\n    sceneId,\n    characterName,\n    sceneScript,\n    characterImage,\n    backgroundImage,\n    sceneSound,\n    options,\n    nextSceneId,\n    sceneType,\n    moveBlockBy,\n    removeBlock,\n  } = props;\n\n  const onRemoveClick = () => {\n    removeBlock(sceneId)\n  };\n\n  return (\n    <Container>\n      <MenuGroup>\n        <MenuItem onClick={e => moveBlockBy(sceneId, -1)}>위로</MenuItem>\n        <MenuItem onClick={e => moveBlockBy(sceneId, 1)}>아래로</MenuItem>\n        <MenuItem onClick={onRemoveClick}>삭제</MenuItem>\n        <MenuItem>수정</MenuItem>\n      </MenuGroup>\n      <SceneID>{sceneId} <small>{sceneType === \"text\" ? \"💬채팅\" : \"👥만남\"}</small></SceneID>\n      <CharacterName>{characterName}</CharacterName>\n      <SceneScript>{sceneScript}</SceneScript>\n      {characterImage?.length > 0 && <FileDescription>🕺🏻{characterImage}</FileDescription>}\n      {backgroundImage?.length > 0 && <FileDescription>🏞{backgroundImage}</FileDescription>}\n      {sceneSound?.length > 0 && <FileDescription>🔈{sceneSound}</FileDescription>}\n      {options.length === 0 ? \n        <div>Next Scene ID : {nextSceneId}</div>\n      : (\n        <ol>\n          {options.map(({ answer, reaction, nextId }, i) => (\n            <li key={i}>\n              {answer?.length > 0 ? <Script color=\"lightcyan\">{answer}</Script> : null}\n              {answer?.length > 0 ? ' → ' : null}\n              {reaction?.length > 0 ? <Script color='lightyellow'>{reaction}</Script> : null}\n              {reaction?.length > 0 ? ' → ' : null}\n              {nextId}\n            </li>\n          ))}\n        </ol>\n      )}\n      <OptionGroup></OptionGroup>\n    </Container>\n  );\n}\n\nexport default ScriptBlock;\n","const LOCAL_STORAGE_ID = \"me.1000ship.game-script-tool\";\n\nexport const loadBlockList = () => {\n  let cachedBlockList;\n  try {\n    cachedBlockList = JSON.parse(localStorage.getItem(LOCAL_STORAGE_ID));\n    if (cachedBlockList === null) cachedBlockList = [];\n  } catch {\n    cachedBlockList = [];\n  }\n  return cachedBlockList;\n};\n\nexport const saveBlockList = (blockList) => {\n  try {\n    localStorage.setItem(\n      LOCAL_STORAGE_ID,\n      JSON.stringify(blockList)\n    );\n  } catch {\n    alert( \"자동 저장 중 문제 발생\")\n  }\n};\n\nexport const exportScript = (blockList) => {\n  try {\n\n  } catch {\n\n  }\n}\n\nexport const importScript = () => {\n  try {\n\n  } catch {\n    \n  }\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport ScriptBlock from \"./Partials/ScriptBlock\";\nimport { saveBlockList } from \"../Utils/api\";\n\nconst Container = styled.div`\n  padding: 5px 0px;\n`;\n\nfunction ScriptView({ blockList, setBlockList }) {\n  const moveBlockBy = (sceneId, by) => {\n    const index = blockList.findIndex((block) => (block.sceneId === sceneId));\n    const at = index + by;\n    if (at < 0 || at >= blockList.length) return;\n    setBlockList((blockList) => {\n      const tmpArray = [\n        ...blockList.slice(0, index),\n        ...blockList.slice(index + 1),\n      ];\n      const result = [\n        ...tmpArray.slice(0, at),\n        blockList[index],\n        ...tmpArray.slice(at),\n      ]\n      saveBlockList(result)\n      return result;\n    });\n  };\n\n  const removeBlock = (sceneId) => {\n    if( !window.confirm(\"삭제한 후 되돌릴 수 없습니다. 삭제하시겠습니까?\") ) return\n    setBlockList((blockList) => {\n      const removeIndex = blockList.findIndex(\n        (block) => block.sceneId === sceneId\n      );\n      saveBlockList(\n        blockList.slice(0, removeIndex).concat(blockList.slice(removeIndex + 1))\n      );\n      return blockList\n        .slice(0, removeIndex)\n        .concat(blockList.slice(removeIndex + 1));\n    });\n  };\n\n  return (\n    <Container>\n      {blockList.map(\n        (\n          {\n            sceneId,\n            characterName,\n            sceneScript,\n            characterImage,\n            backgroundImage,\n            sceneSound,\n            options,\n            nextSceneId,\n            sceneType,\n          },\n          i\n        ) => (\n          <ScriptBlock\n            key={sceneId}\n            sceneId={sceneId}\n            characterName={characterName}\n            sceneScript={sceneScript}\n            characterImage={characterImage}\n            backgroundImage={backgroundImage}\n            sceneSound={sceneSound}\n            options={options}\n            nextSceneId={nextSceneId}\n            sceneType={sceneType}\n            moveBlockBy={moveBlockBy}\n            removeBlock={removeBlock}\n          ></ScriptBlock>\n        )\n      )}\n    </Container>\n  );\n}\n\nexport default ScriptView;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { OPTION_MINIMUM_COUNT } from \"../Utils/Constant\";\n\nconst Container = styled.div`\n  display: ${({isOpend}) => isOpend ? 'block' :'none' };\n  padding: 10px 0px;\n  border-bottom: 1px solid gray;\n  z-index: 1;\n`;\nconst InputGroup = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst InputPair = styled.div`\n  padding: 3px 0px;\n`;\nconst Label = styled.label``;\nconst TextInput = styled.input``;\nconst TextArea = styled.textarea`\n  width: 100%;\n  height: 50px;\n  display: block;\n`;\n\nfunction ScriptInput({ createNewBlock, blockList, isOpend }) {\n  const defaultState = {\n    sceneId: \"\",\n    characterName: \"\",\n    sceneScript: \"\",\n    characterImage: \"\",\n    backgroundImage: \"\",\n    sceneSound: \"\",\n    nextSceneId: \"\",\n    options: [\n      {\n        answer: \"\",\n        reaction: \"\",\n        nextId: \"\",\n      },\n    ],\n    sceneType: \"meet\",\n  };\n  let [formData, setFormData] = useState(defaultState);\n  let {\n    sceneId,\n    characterName,\n    sceneScript,\n    characterImage,\n    backgroundImage,\n    sceneSound,\n    nextSceneId,\n    options,\n    sceneType,\n  } = formData;\n\n  const onInputChange = (e) => {\n    const {\n      name,\n      value,\n      dataset: { optionIndex, value: dataValue },\n    } = e.target;\n    if (formData[name] === undefined && optionIndex === undefined) return;\n    if ( dataValue !== undefined ) // for radio button\n      setFormData({\n        ...formData,\n        [name]: dataValue,\n      });\n    else if (optionIndex === undefined) // for text input\n      setFormData({\n        ...formData,\n        [name]: value,\n      });\n    else { // for option text input\n      setFormData((data) => {\n        data.options[optionIndex][name] = value;\n        return Object.assign({}, data);\n      });\n    }\n  };\n\n  const onOptionAddClick = (e) => {\n    setFormData({\n      ...formData,\n      options: formData.options.concat({\n        answer: \"\",\n        reaction: \"\",\n        nextId: \"\",\n      }),\n    });\n  };\n\n  const onOptionRemoveClick = (e) => {\n    if (options.length > OPTION_MINIMUM_COUNT)\n      setFormData({\n        ...formData,\n        options: options.slice(0, options.length - 1),\n      });\n  };\n\n  const onNewBlockClick = (e) => {\n    if (sceneId.length === 0) alert(\"Scene ID를 입력하세요.\");\n    else if (blockList.find((block) => block.sceneId === sceneId)) {\n      alert(\"중복되는 Scene ID가 있습니다.\");\n    } else if (createNewBlock) {\n      createNewBlock(Object.assign({}, formData));\n      setFormData(defaultState);\n    }\n  };\n\n  return (\n    <Container isOpend={isOpend}>\n      <InputPair>\n        <span>Scene Type : </span>\n        <TextInput\n          name=\"sceneType\"\n          id=\"scene-type-meet\"\n          data-value=\"meet\"\n          type=\"radio\"\n          checked={sceneType === \"meet\"}\n          onChange={onInputChange}\n        ></TextInput>\n        <Label htmlFor=\"scene-type-meet\">만남</Label>\n        <TextInput\n          name=\"sceneType\"\n          id=\"scene-type-text\"\n          data-value=\"text\"\n          type=\"radio\"\n          checked={sceneType === \"text\"}\n          onChange={onInputChange}\n        ></TextInput>\n        <Label htmlFor=\"scene-type-text\">문자</Label>\n      </InputPair>\n      <InputPair>\n        <Label htmlFor=\"scene-id\">Scene ID : </Label>\n        <TextInput\n          name=\"sceneId\"\n          id=\"scene-id\"\n          type=\"text\"\n          placeholder=\"#3-1\"\n          value={sceneId}\n          onChange={onInputChange}\n        ></TextInput>\n      </InputPair>\n      <InputPair>\n        <Label htmlFor=\"character-name\">Character Name : </Label>\n        <TextInput\n          name=\"characterName\"\n          value={characterName}\n          onChange={onInputChange}\n          id=\"character-name\"\n          type=\"text\"\n          placeholder=\"John Mayer\"\n        ></TextInput>\n      </InputPair>\n\n      <InputPair>\n        <Label htmlFor=\"scene-script\">Scene Script : </Label>\n        <TextArea\n          name=\"sceneScript\"\n          value={sceneScript}\n          onChange={onInputChange}\n          id=\"scene-script\"\n          placeholder=\"Hello, the weather is sunny. Shall we go picnic?\"\n        ></TextArea>\n      </InputPair>\n\n      <InputGroup>\n        <InputPair>\n          <Label htmlFor=\"character-image\">Character Image : </Label>\n          <TextInput\n            name=\"characterImage\"\n            value={characterImage}\n            onChange={onInputChange}\n            id=\"character-image\"\n            type=\"text\"\n            placeholder=\"smile.png (선택입력)\"\n          ></TextInput>\n        </InputPair>\n        <InputPair>\n          <Label htmlFor=\"background-image\">Background Image : </Label>\n          <TextInput\n            name=\"backgroundImage\"\n            value={backgroundImage}\n            onChange={onInputChange}\n            id=\"background-image\"\n            type=\"text\"\n            placeholder=\"park.png (선택입력)\"\n          ></TextInput>\n        </InputPair>\n        <InputPair>\n          <Label htmlFor=\"scene-sound\">Scene Sound : </Label>\n          <TextInput\n            name=\"sceneSound\"\n            value={sceneSound}\n            onChange={onInputChange}\n            id=\"scene-sound\"\n            type=\"text\"\n            placeholder=\"laugh.mp3 (선택입력)\"\n          ></TextInput>\n        </InputPair>\n      </InputGroup>\n\n      {options.length > 0 ? (\n        options.map(({ answer, reaction, nextId }, i) => (\n          <InputPair key={i} style={{ display: \"flex\" }}>\n            <Label>{i + 1}. </Label>\n            <TextInput\n              style={{ flex: 1 }}\n              type=\"text\"\n              placeholder=\"(대답) I like too\"\n              name=\"answer\"\n              data-option-index={i}\n              value={answer}\n              onChange={onInputChange}\n            ></TextInput>\n            <TextInput\n              style={{ flex: 1 }}\n              type=\"text\"\n              placeholder=\"(반응) Let's meet now\"\n              name=\"reaction\"\n              data-option-index={i}\n              value={reaction}\n              onChange={onInputChange}\n            ></TextInput>\n            <TextInput\n              type=\"text\"\n              placeholder={`#3-${i + 2}`}\n              name=\"nextId\"\n              data-option-index={i}\n              value={nextId}\n              onChange={onInputChange}\n            ></TextInput>\n          </InputPair>\n        ))\n      ) : (\n        <InputPair>\n          <Label htmlFor=\"next-scene-id\">Next Scene ID : </Label>\n          <TextInput\n            name=\"nextSceneId\"\n            value={nextSceneId}\n            onChange={onInputChange}\n            id=\"next-scene-id\"\n            type=\"text\"\n            placeholder=\"#4-1\"\n          ></TextInput>\n        </InputPair>\n      )}\n      <button onClick={onOptionAddClick}>선택지 추가</button>\n      {options.length > 0 && (\n        <button onClick={onOptionRemoveClick}>선택지 삭제</button>\n      )}\n      <br />\n      <button onClick={onNewBlockClick}>블럭 추가</button>\n    </Container>\n  );\n}\n\nexport default ScriptInput;\n","\nexport const OPTION_MINIMUM_COUNT = 0","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport ControlMenu from \"./Components/ControlMenu\";\nimport ScriptView from \"./Components/ScriptView\";\nimport ScriptInput from \"./Components/ScriptInput\";\nimport { loadBlockList, saveBlockList } from \"./Utils/api\";\n\nconst Container = styled.div`\n  @media (min-width: 800px) {\n    width: 80%;\n  }\n  margin: auto auto;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst BlockContainer = styled.div`\n  overflow-y: auto;\n`;\n\nfunction App() {\n\n  const cachedBlockList = loadBlockList();\n  let [blockList, setBlockList] = useState(cachedBlockList);\n  let [isSceneFormOpened, setIsSceneFormOpened] = useState(false);\n\n  const toggleSceneForm = () => {\n    setIsSceneFormOpened((opened) => !opened);\n  };\n\n  const createNewBlock = (blockData) => {\n    saveBlockList([...blockList, blockData]);\n    setBlockList([...blockList, blockData]);\n  };\n\n  return (\n    <Container>\n      <ControlMenu toggleSceneForm={toggleSceneForm}></ControlMenu>\n      <ScriptInput\n        blockList={blockList}\n        createNewBlock={createNewBlock}\n        isOpend={isSceneFormOpened}\n      ></ScriptInput>\n      <BlockContainer>\n        <ScriptView\n          blockList={blockList}\n          setBlockList={setBlockList}\n        ></ScriptView>\n      </BlockContainer>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}