{"version":3,"sources":["Utils/api.js","Components/ControlMenu.js","Components/Partials/ScriptBlock.js","Components/ScriptView.js","Components/ScriptInput/constant.js","Components/ScriptInput/ScriptInputPresenter.js","Components/ScriptInput/ScriptInputController.js","Components/ScriptInput/index.js","Utils/Constant.js","App.js","serviceWorker.js","index.js"],"names":["saveBlockList","blockList","localStorage","setItem","JSON","stringify","alert","exportScript","data","filename","type","file","Blob","window","navigator","msSaveOrOpenBlob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","parseInt","Math","random","importScript","callback","input","accept","onchange","event","reader","FileReader","readAsText","onload","parse","result","processFile","target","files","Container","styled","div","ControlButton","button","ControlMenu","setBlockList","setModifySceneId","setIsSceneFormOpened","onClick","e","confirm","isOpend","Red","span","SceneID","CharacterName","SceneScript","OptionGroup","ol","OptionItem","li","FileDescription","Script","props","color","MenuGroup","ul","MenuItem","ScriptBlock","sceneId","characterName","sceneScript","characterImage","backgroundImage","sceneSound","options","nextSceneId","sceneType","moveBlockBy","removeBlock","modifyBlock","length","map","i","answer","reaction","nextId","key","findIndex","block","ScriptView","by","index","at","tmpArray","slice","removeIndex","concat","DEFAULT_SCENE","InputGroup","InputPair","Label","label","TextInput","TextArea","textarea","ScriptInputPresenter","isModifyMode","formData","onInputChange","onOptionAddClick","onOptionRemoveClick","onNewBlockClick","onModifyBlockClick","name","id","data-value","checked","onChange","htmlFor","placeholder","value","disabled","style","display","flex","data-option-index","ScriptInput","ScriptInputController","createNewBlock","modifySceneId","defaultScene","find","useEffect","setFormData","useState","dataset","optionIndex","dataValue","undefined","Object","assign","BlockContainer","App","cachedBlockList","getItem","loadBlockList","isSceneFormOpened","blockData","targetIndex","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oQAaaA,EAAgB,SAACC,GAC5B,IACEC,aAAaC,QAfQ,+BAekBC,KAAKC,UAAUJ,IACtD,SACAK,MAAM,gEAIGC,EAAe,SAACN,GAC3B,KAgCF,SAAkBO,EAAMC,EAAUC,GAChC,IAAIC,EAAO,IAAIC,KAAK,CAACJ,GAAO,CAAEE,KAAMA,IACpC,GAAIG,OAAOC,UAAUC,iBAEnBF,OAAOC,UAAUC,iBAAiBJ,EAAMF,OACrC,CAEH,IAAIO,EAAIC,SAASC,cAAc,KAC7BC,EAAMC,IAAIC,gBAAgBV,GAC5BK,EAAEM,KAAOH,EACTH,EAAEO,SAAWd,EACbQ,SAASO,KAAKC,YAAYT,GAC1BA,EAAEU,QACFC,YAAW,WACTV,SAASO,KAAKI,YAAYZ,GAC1BH,OAAOO,IAAIS,gBAAgBV,KAC1B,IA/CHI,CACEnB,KAAKC,UAAUJ,GADT,iBAEI6B,SAAyB,IAAhBC,KAAKC,WACxB,OAEF,SACA1B,MAAM,gFAIG2B,EAAe,SAACC,GAC3B,IACE,IAAIC,EAAQlB,SAASC,cAAc,SACnCiB,EAAMzB,KAAO,OACbyB,EAAMC,OAAS,oCACfD,EAAMT,QACNS,EAAME,SAAW,SAAUC,IAG3B,SAAqB3B,GACnB,IAAI4B,EAAS,IAAIC,WACjBD,EAAOE,WAAW9B,EAAM,SACxB4B,EAAOG,OAAS,WACdR,EAAU9B,KAAKuC,MAAMJ,EAAOK,UAN9BC,CAAYP,EAAMQ,OAAOC,MAAM,KASjC,SACAzC,MAAM,gF,kRC9CV,IAAM0C,EAAYC,IAAOC,IAAV,KASTC,EAAgBF,IAAOG,OAAV,KA4CJC,EAxCK,SAAC,GAKd,IAJLpD,EAII,EAJJA,UACAqD,EAGI,EAHJA,aACAC,EAEI,EAFJA,iBACAC,EACI,EADJA,qBAwBA,OACE,kBAACR,EAAD,KACE,kBAACG,EAAD,CAAeM,QARQ,SAACC,GACrB7C,OAAO8C,QAAQ,4EACpBL,EAAa,IACbzC,OAAOP,MAAM,0KAKX,gBACA,kBAAC6C,EAAD,CAAeM,QAzBU,SAACC,GAC5BF,GAAqB,SAACI,GAAD,OAAcA,KACnCL,EAAiB,QAuBf,mBAGA,kBAACJ,EAAD,CAAeM,QAvBG,SAACC,GACrBzB,GAAa,SAACzB,GACZ8C,EAAa9C,GACbR,EAAcQ,QAoBd,iBACA,kBAAC2C,EAAD,CAAeM,QAjBG,SAACC,GACrBnD,EAAaN,KAgBX,mB,o/CCjDN,IAAM4D,EAAMZ,IAAOa,KAAV,KAKHd,EAAYC,IAAOC,IAAV,KAMTa,EAAUd,IAAOC,IAAV,KASPc,EAAgBf,IAAOC,IAAV,KAIbe,EAAchB,IAAOC,IAAV,KAMXgB,EAAcjB,IAAOkB,GAAV,KACXC,EAAanB,IAAOoB,GAAV,KACVC,EAAkBrB,IAAOa,KAAV,KAIfS,EAAStB,IAAOa,KAAV,KACU,SAACU,GAAD,OAAYA,EAAMC,MAAQD,EAAMC,MAAQ,WAMxDC,EAAYzB,IAAO0B,GAAV,KASTC,EAAW3B,IAAOoB,GAAV,KA8FCQ,MArFf,SAAqBL,GAAQ,IAEzBM,EAaEN,EAbFM,QACAC,EAYEP,EAZFO,cACAC,EAWER,EAXFQ,YACAC,EAUET,EAVFS,eACAC,EASEV,EATFU,gBACAC,EAQEX,EARFW,WACAC,EAOEZ,EAPFY,QACAC,EAMEb,EANFa,YACAC,EAKEd,EALFc,UACAC,EAIEf,EAJFe,YACAC,EAGEhB,EAHFgB,YACAC,EAEEjB,EAFFiB,YACAxF,EACEuE,EADFvE,UAWF,OACE,kBAAC,EAAD,KACE,kBAACyE,EAAD,KACE,kBAACE,EAAD,CAAUnB,QAAS,SAACC,GAAD,OAAO6B,EAAYT,GAAU,KAAhD,gBACA,kBAACF,EAAD,CAAUnB,QAAS,SAACC,GAAD,OAAO6B,EAAYT,EAAS,KAA/C,sBACA,kBAACF,EAAD,CAAUnB,QAbM,WACpB+B,EAAYV,KAYR,gBACA,kBAACF,EAAD,CAAUnB,QAVM,WACpBgC,EAAYX,KASR,iBAEF,kBAACf,EAAD,KACGe,EAAS,IACV,+BACiB,WAAdQ,EACG,2BACc,SAAdA,EACA,2BACA,6BAGO,WAAdA,GAA0B,kBAACtB,EAAD,KAAgBe,GAC3C,kBAACd,EAAD,KAAce,GACC,WAAdM,IAAwC,OAAdL,QAAc,IAAdA,OAAA,EAAAA,EAAgBS,QAAS,GAClD,kBAACpB,EAAD,gCAAsBW,GAET,WAAdK,IAAyC,OAAfJ,QAAe,IAAfA,OAAA,EAAAA,EAAiBQ,QAAS,GACnD,kBAACpB,EAAD,oBAAoBY,GAEP,WAAdI,IAAoC,OAAVH,QAAU,IAAVA,OAAA,EAAAA,EAAYO,QAAS,GAC9C,kBAACpB,EAAD,oBAAoBa,GAEP,WAAdG,GACC,oCACsB,IAAnBF,EAAQM,OACP,gDAAsBL,GAEtB,kBAACnB,EAAD,KACGkB,EAAQO,KAAI,WAA+BC,GAA/B,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAUC,EAArB,EAAqBA,OAArB,OACX,kBAAC3B,EAAD,CAAY4B,IAAKJ,IACR,OAANC,QAAM,IAANA,OAAA,EAAAA,EAAQH,QAAS,EAChB,kBAACnB,EAAD,CAAQE,MAAM,aAAaoB,GACzB,MACG,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQH,QAAS,EAAI,WAAQ,MACrB,OAARI,QAAQ,IAARA,OAAA,EAAAA,EAAUJ,QAAS,EAClB,kBAACnB,EAAD,CAAQE,MAAM,eAAeqB,GAC3B,MACK,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAUJ,QAAS,EAAI,WAAQ,MAC+B,IAA9DzF,EAAUgG,WAAU,SAACC,GAAD,OAAWA,EAAMpB,UAAYiB,KAChD,kBAAClC,EAAD,KAAMkC,GAENA,U,4FCpIpB,IAAM/C,EAAYC,IAAOC,IAAV,KAyFAiD,MArFf,YAKI,IAJFlG,EAIC,EAJDA,UACAqD,EAGC,EAHDA,aACAC,EAEC,EAFDA,iBACAC,EACC,EADDA,qBAEM+B,EAAc,SAACT,EAASsB,GAC5B,IAAMC,EAAQpG,EAAUgG,WAAU,SAACC,GAAD,OAAWA,EAAMpB,UAAYA,KACzDwB,EAAKD,EAAQD,EACfE,EAAK,GAAKA,GAAMrG,EAAUyF,QAC9BpC,GAAa,SAACrD,GACZ,IAAMsG,EAAQ,sBACTtG,EAAUuG,MAAM,EAAGH,IADV,YAETpG,EAAUuG,MAAMH,EAAQ,KAEvBzD,EAAM,sBACP2D,EAASC,MAAM,EAAGF,IADX,CAEVrG,EAAUoG,IAFA,YAGPE,EAASC,MAAMF,KAGpB,OADAtG,EAAc4C,GACPA,MAIL4C,EAAc,SAACV,GACdjE,OAAO8C,QAAQ,oIAEpBL,GAAa,SAACrD,GACZ,IAAMwG,EAAcxG,EAAUgG,WAC5B,SAACC,GAAD,OAAWA,EAAMpB,UAAYA,KAK/B,OAHA9E,EACEC,EAAUuG,MAAM,EAAGC,GAAaC,OAAOzG,EAAUuG,MAAMC,EAAc,KAEhExG,EACJuG,MAAM,EAAGC,GACTC,OAAOzG,EAAUuG,MAAMC,EAAc,QAItChB,EAAc,SAACX,GACnBtB,GAAsB,GACtBD,EAAkBuB,IAGpB,OACE,kBAAC,EAAD,KACG7E,EAAU0F,KACT,WAYEC,GAZF,IAEId,EAFJ,EAEIA,QACAC,EAHJ,EAGIA,cACAC,EAJJ,EAIIA,YACAC,EALJ,EAKIA,eACAC,EANJ,EAMIA,gBACAC,EAPJ,EAOIA,WACAC,EARJ,EAQIA,QACAC,EATJ,EASIA,YACAC,EAVJ,EAUIA,UAVJ,OAcE,kBAAC,EAAD,CACEU,IAAKlB,EACLA,QAASA,EACTC,cAAeA,EACfC,YAAaA,EACbC,eAAgBA,EAChBC,gBAAiBA,EACjBC,WAAYA,EACZC,QAASA,EACTC,YAAaA,EACbC,UAAWA,EACXC,YAAaA,EACbC,YAAaA,EACbC,YAAaA,EACbxF,UAAWA,S,cCtFV0G,EAAgB,CAC3B7B,QAAS,GACTC,cAAe,GACfC,YAAa,GACbC,eAAgB,GAChBC,gBAAiB,GACjBC,WAAY,GACZE,YAAa,GACbD,QAAS,CACP,CACES,OAAQ,GACRC,SAAU,GACVC,OAAQ,KAGZT,UAAW,Q,4nBCPb,IAAMtC,GAAYC,IAAOC,IAAV,KACF,qBAAGU,QAAyB,QAAU,UAK7CgD,GAAa3D,IAAOC,IAAV,KAIV2D,GAAY5D,IAAOC,IAAV,KAGT4D,GAAQ7D,IAAO8D,MAAV,KACLC,GAAY/D,IAAOd,MAAV,KACT8E,GAAWhE,IAAOiE,SAAV,KAoMCC,GA9Lc,SAAC,GAAD,IAC3BvD,EAD2B,EAC3BA,QACAwD,EAF2B,EAE3BA,aAF2B,IAG3BC,SACEvC,EAJyB,EAIzBA,QACAC,EALyB,EAKzBA,cACAC,EANyB,EAMzBA,YACAC,EAPyB,EAOzBA,eACAC,EARyB,EAQzBA,gBACAC,EATyB,EASzBA,WACAE,EAVyB,EAUzBA,YACAD,EAXyB,EAWzBA,QACAE,EAZyB,EAYzBA,UAEFgC,EAd2B,EAc3BA,cACAC,EAf2B,EAe3BA,iBACAC,EAhB2B,EAgB3BA,oBACAC,EAjB2B,EAiB3BA,gBACAC,EAlB2B,EAkB3BA,mBAlB2B,OAoB3B,kBAAC,GAAD,CAAW9D,QAASA,GAClB,kBAACiD,GAAD,KACE,+CACA,kBAACG,GAAD,CACEW,KAAK,YACLC,GAAG,kBACHC,aDpCuB,OCqCvBnH,KAAK,QACLoH,QDtCuB,SCsCdxC,EACTyC,SAAUT,IAEZ,kBAACR,GAAD,CAAOkB,QAAQ,mBAAf,gBACA,kBAAChB,GAAD,CACEW,KAAK,YACLC,GAAG,kBACHC,aD5CuB,OC6CvBnH,KAAK,QACLoH,QD9CuB,SC8CdxC,EACTyC,SAAUT,IAEZ,kBAACR,GAAD,CAAOkB,QAAQ,mBAAf,gBACA,kBAAChB,GAAD,CACEW,KAAK,YACLC,GAAG,oBACHC,aDpDyB,SCqDzBnH,KAAK,QACLoH,QDtDyB,WCsDhBxC,EACTyC,SAAUT,IAEZ,kBAACR,GAAD,CAAOkB,QAAQ,qBAAf,iBAEF,kBAACnB,GAAD,KACE,kBAACC,GAAD,CAAOkB,QAAQ,YAAf,eACA,kBAAChB,GAAD,CACEW,KAAK,UACLC,GAAG,WACHlH,KAAK,OACLuH,YAAY,OACZC,MAAOpD,EACPiD,SAAUT,EACVa,SAAUf,IAEXA,GAAgB,wDDtEU,WCwE5B9B,GACC,kBAACuB,GAAD,KACE,kBAACC,GAAD,CAAOkB,QAAQ,kBAAf,qBACA,kBAAChB,GAAD,CACEW,KAAK,gBACLO,MAAOnD,EACPgD,SAAUT,EACVM,GAAG,iBACHlH,KAAK,OACLuH,YAAY,gBAKlB,kBAACpB,GAAD,KACE,kBAACC,GAAD,CAAOkB,QAAQ,gBAAf,mBACA,kBAACf,GAAD,CACEU,KAAK,cACLO,MAAOlD,EACP+C,SAAUT,EACVM,GAAG,eACHK,YD7FyB,WC8FvB3C,EACI,mDACA,yDDhGmB,WCqG5BA,GACC,kBAACsB,GAAD,KACE,kBAACC,GAAD,KACE,kBAACC,GAAD,CAAOkB,QAAQ,mBAAf,sBACA,kBAAChB,GAAD,CACEW,KAAK,iBACLO,MAAOjD,EACP8C,SAAUT,EACVM,GAAG,kBACHlH,KAAK,OACLuH,YAAY,0CAGhB,kBAACpB,GAAD,KACE,kBAACC,GAAD,CAAOkB,QAAQ,oBAAf,uBACA,kBAAChB,GAAD,CACEW,KAAK,kBACLO,MAAOhD,EACP6C,SAAUT,EACVM,GAAG,mBACHlH,KAAK,OACLuH,YAAY,yCAGhB,kBAACpB,GAAD,KACE,kBAACC,GAAD,CAAOkB,QAAQ,eAAf,kBACA,kBAAChB,GAAD,CACEW,KAAK,aACLO,MAAO/C,EACP4C,SAAUT,EACVM,GAAG,cACHlH,KAAK,OACLuH,YAAY,2CDrIS,WC0I5B3C,GACC,oCACGF,EAAQM,OAAS,EAChBN,EAAQO,KAAI,WAA+BC,GAA/B,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAUC,EAArB,EAAqBA,OAArB,OACV,kBAACc,GAAD,CAAWb,IAAKJ,EAAGwC,MAAO,CAAEC,QAAS,SACnC,kBAACvB,GAAD,KAAQlB,EAAI,EAAZ,MACA,kBAACoB,GAAD,CACEoB,MAAO,CAAEE,KAAM,GACf5H,KAAK,OACLuH,YAAY,4BACZN,KAAK,SACLY,oBAAmB3C,EACnBsC,MAAOrC,EACPkC,SAAUT,IAEZ,kBAACN,GAAD,CACEoB,MAAO,CAAEE,KAAM,GACf5H,KAAK,OACLuH,YAAY,gCACZN,KAAK,WACLY,oBAAmB3C,EACnBsC,MAAOpC,EACPiC,SAAUT,IAEZ,kBAACN,GAAD,CACEtG,KAAK,OACLuH,YAAW,aAAQrC,EAAI,GACvB+B,KAAK,SACLY,oBAAmB3C,EACnBsC,MAAOnC,EACPgC,SAAUT,QAKhB,kBAACT,GAAD,KACE,kBAACC,GAAD,CAAOkB,QAAQ,iBAAf,oBACA,kBAAChB,GAAD,CACEW,KAAK,cACLO,MAAO7C,EACP0C,SAAUT,EACVM,GAAG,gBACHlH,KAAK,OACLuH,YAAY,UAIlB,4BAAQxE,QAAS8D,GAAjB,mCACCnC,EAAQM,OAAS,GAChB,4BAAQjC,QAAS+D,GAAjB,mCAEF,8BAGJ,4BAAQ/D,QAAS2D,EAAeM,EAAqBD,GAClDL,EAAe,4BAAU,+BC1GjBoB,IC1GAC,GDGf,YAMI,IALFC,EAKC,EALDA,eACAjD,EAIC,EAJDA,YACAxF,EAGC,EAHDA,UACA2D,EAEC,EAFDA,QAEC,IADD+E,qBACC,MADe,KACf,EACKC,EAAeD,EACjB1I,EAAU4I,MAAK,SAACrI,GAAD,OAAUA,EAAKsE,UAAY6D,KAC1ChC,EACJmC,qBAAU,WACRC,EAAY,eACPH,MAEJ,CAACA,IARH,MAU6BI,mBAASJ,GAVtC,mBAUIvB,EAVJ,KAUc0B,EAVd,KAWKjE,EAAqBuC,EAArBvC,QAASM,EAAYiC,EAAZjC,QAwEf,OACE,kBAAC,GAAD,CACExB,QAASA,EACTwD,aAAgC,OAAlBuB,EACdtB,SAAUA,EACVC,cA3EkB,SAAC5D,GAAO,IAAD,EAKvBA,EAAEZ,OAHJ6E,EAFyB,EAEzBA,KACAO,EAHyB,EAGzBA,MAHyB,IAIzBe,QAAWC,EAJc,EAIdA,YAAoBC,EAJN,EAIDjB,WAEHkB,IAAnB/B,EAASM,SAAuCyB,IAAhBF,GAGlCH,OAFgBK,IAAdD,EAEU,2BACP9B,GADM,kBAERM,EAAOwB,SAEaC,IAAhBF,EAEK,2BACP7B,GADM,kBAERM,EAAOO,IAIE,SAAC1H,GAEX,OADAA,EAAK4E,QAAQ8D,GAAavB,GAAQO,EAC3BmB,OAAOC,OAAO,GAAI9I,MAqD3B+G,iBAhDqB,SAAC7D,GACxBqF,EAAY,2BACP1B,GADM,IAETjC,QAASiC,EAASjC,QAAQsB,OAAO,CAC/Bb,OAAQ,GACRC,SAAU,GACVC,OAAQ,SA2CVyB,oBAtCwB,SAAC9D,GACvB0B,EAAQM,OE/DoB,GFgE9BqD,EAAY,2BACP1B,GADM,IAETjC,QAASA,EAAQoB,MAAM,EAAGpB,EAAQM,OAAS,OAmC7C+B,gBA/BoB,SAAC/D,GACA,IAAnBoB,EAAQY,OAAcpF,MAAM,kDACvBL,EAAU4I,MAAK,SAAC3C,GAAD,OAAWA,EAAMpB,UAAYA,KACnDxE,MAAM,sFACGoI,IACTA,EAAeW,OAAOC,OAAO,GAAIjC,IACjC0B,EAAY,2BACPH,GADM,IAETxD,QAAS,CACP,CACES,OAAQ,GACRC,SAAU,GACVC,OAAQ,UAoBd2B,mBAbuB,SAAChE,GAC1B+B,EAAY4D,OAAOC,OAAO,GAAIjC,Q,iTGpFlC,IAAMrE,GAAYC,IAAOC,IAAV,MAUTqG,GAAiBtG,IAAOC,IAAV,MAgELsG,OA5Df,WACE,IAAMC,ETpBqB,WAC3B,IAAIA,EACJ,IAE0B,QADxBA,EAAkBrJ,KAAKuC,MAAMzC,aAAawJ,QALrB,oCAMSD,EAAkB,IAChD,SACAA,EAAkB,GAEpB,OAAOA,ESYiBE,GADX,EAEmBX,mBAASS,GAF5B,mBAERxJ,EAFQ,KAEGqD,EAFH,OAGmC0F,oBAAS,GAH5C,mBAGRY,EAHQ,KAGWpG,EAHX,OAI2BwF,mBAAS,MAJpC,mBAIRL,EAJQ,KAIOpF,EAJP,KAiCb,OACE,kBAAC,GAAD,KACE,kBAAC,EAAD,CACEtD,UAAWA,EACXqD,aAAcA,EACdC,iBAAkBA,EAClBC,qBAAsBA,IAExB,kBAAC,GAAD,CACEvD,UAAWA,EACXyI,eArCiB,SAACmB,GACtB7J,EAAc,GAAD,mBAAKC,GAAL,CAAgB4J,KAC7BvG,EAAa,GAAD,mBAAKrD,GAAL,CAAgB4J,MAoCxBpE,YAjCc,SAACoE,GACnB,IAAMC,EAAc7J,EAAUgG,WAC5B,SAACzF,GAAD,OAAUA,EAAKsE,UAAY+E,EAAU/E,YAElB,IAAjBgF,GAIJ9J,EAAc,GAAD,mBACRC,EAAUuG,MAAM,EAAGsD,IADX,CAEXD,GAFW,YAGR5J,EAAUuG,MAAMsD,EAAc,MAEnCxG,EAAa,GAAD,mBACPrD,EAAUuG,MAAM,EAAGsD,IADZ,CAEVD,GAFU,YAGP5J,EAAUuG,MAAMsD,EAAc,MAEnCvG,EAAiB,MACjBC,GAAqB,IAdnBlD,MAAM,oDAAD,OAAkBuJ,EAAU/E,QAA5B,0DA6BHlB,QAASgG,EACTjB,cAAeA,IAEjB,kBAACY,GAAD,KACE,kBAAC,EAAD,CACEtJ,UAAWA,EACXqD,aAAcA,EACdC,iBAAkBA,EAClBC,qBAAsBA,OC9DZuG,QACW,cAA7BlJ,OAAOmJ,SAASC,UAEe,UAA7BpJ,OAAOmJ,SAASC,UAEhBpJ,OAAOmJ,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFpJ,SAASqJ,eAAe,SDyHpB,kBAAmBxJ,WACrBA,UAAUyJ,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.adb51b4e.chunk.js","sourcesContent":["const LOCAL_STORAGE_ID = \"me.1000ship.game-script-tool\";\n\nexport const loadBlockList = () => {\n  let cachedBlockList;\n  try {\n    cachedBlockList = JSON.parse(localStorage.getItem(LOCAL_STORAGE_ID));\n    if (cachedBlockList === null) cachedBlockList = [];\n  } catch {\n    cachedBlockList = [];\n  }\n  return cachedBlockList;\n};\n\nexport const saveBlockList = (blockList) => {\n  try {\n    localStorage.setItem(LOCAL_STORAGE_ID, JSON.stringify(blockList));\n  } catch {\n    alert(\"자동 저장 중 문제 발생\");\n  }\n};\n\nexport const exportScript = (blockList) => {\n  try {\n    download(\n      JSON.stringify(blockList),\n      `script_${parseInt(Math.random() * 1000)}`,\n      \"txt\"\n    );\n  } catch {\n    alert(\"저장하는데 문제가 생겼어요\");\n  }\n};\n\nexport const importScript = (callback) => {\n  try {\n    var input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.accept = \"text/plain, text/html, .jsp\";\n    input.click();\n    input.onchange = function (event) {\n      processFile(event.target.files[0]);\n    };\n    function processFile(file) {\n      var reader = new FileReader();\n      reader.readAsText(file, \"UTF-8\");\n      reader.onload = function () {\n        callback( JSON.parse(reader.result) )\n      };\n    }\n  } catch {\n    alert(\"불러오는데 문제가 생겼어요\");\n  }\n};\n\nfunction download(data, filename, type) {\n  var file = new Blob([data], { type: type });\n  if (window.navigator.msSaveOrOpenBlob)\n    // IE10+\n    window.navigator.msSaveOrOpenBlob(file, filename);\n  else {\n    // Others\n    var a = document.createElement(\"a\"),\n      url = URL.createObjectURL(file);\n    a.href = url;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    setTimeout(function () {\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);\n    }, 0);\n  }\n}\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { exportScript, importScript, saveBlockList } from \"../Utils/api\";\n\nconst Container = styled.div`\n  position: fixed;\n  right: 5px;\n  bottom: 5px;\n  z-index: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ControlButton = styled.button`\n  padding: 5px 5px;\n`;\n\nconst ControlMenu = ({\n  blockList,\n  setBlockList,\n  setModifySceneId,\n  setIsSceneFormOpened,\n}) => {\n  const onAddSceneBlockClick = (e) => {\n    setIsSceneFormOpened((isOpend) => !isOpend);\n    setModifySceneId(null);\n  };\n  \n  const onImportClick = (e) => {\n    importScript((data) => {\n      setBlockList(data);\n      saveBlockList(data);\n    });\n  };\n\n  const onExportClick = (e) => {\n    exportScript(blockList);\n  };\n\n  const onClearScriptClick = (e) => {\n    if (!window.confirm(\"정말 모든 Scene을 삭제할까요??\")) return;\n    setBlockList([]);\n    window.alert(\"삭제했습니다. 원치않았다면 지금 당장 새로고침을 눌러주세요.\");\n  };\n\n  return (\n    <Container>\n      <ControlButton onClick={onClearScriptClick}>Clear Script</ControlButton>\n      <ControlButton onClick={onAddSceneBlockClick}>\n        Add Scene Block\n      </ControlButton>\n      <ControlButton onClick={onImportClick}>Import Script</ControlButton>\n      <ControlButton onClick={onExportClick}>Export Script</ControlButton>\n    </Container>\n  );\n};\n\nexport default ControlMenu;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Red = styled.span`\n  color: red;\n  font-weight: bolder;\n`;\n\nconst Container = styled.div`\n  background-color: #efefef;\n  padding: 10px;\n  margin: 5px;\n  position: relative;\n`;\nconst SceneID = styled.div`\n  font-weight: 800;\n  cursor: pointer;\n  & small {\n    font-weight: 400;\n    cursor: default;\n    margin-left: 8px;\n  }\n`;\nconst CharacterName = styled.div`\n  font-style: italic;\n  margin-top: 5px;\n`;\nconst SceneScript = styled.div`\n  margin-top: 5px;\n  background-color: white;\n  padding: 5px;\n  border-radius: 3px;\n`;\nconst OptionGroup = styled.ol``;\nconst OptionItem = styled.li``;\nconst FileDescription = styled.span`\n  margin-right: 10px;\n  font-size: 13px;\n`;\nconst Script = styled.span`\n  background-color: ${(props) => (props.color ? props.color : \"white\")};\n  border-radius: 5px;\n  padding: 3px;\n  display: inline-block;\n`;\n\nconst MenuGroup = styled.ul`\n  margin: 0px;\n  padding: 0px;\n  list-style: none;\n  position: absolute;\n  right: 5px;\n  top: 5px;\n  display: flex;\n`;\nconst MenuItem = styled.li`\n  font-size: 12px;\n  margin-left: 6px;\n  cursor: pointer;\n  &:hover {\n    font-weight: bolder;\n  }\n`;\n\nfunction ScriptBlock(props) {\n  var {\n    sceneId,\n    characterName,\n    sceneScript,\n    characterImage,\n    backgroundImage,\n    sceneSound,\n    options,\n    nextSceneId,\n    sceneType,\n    moveBlockBy,\n    removeBlock,\n    modifyBlock,\n    blockList,\n  } = props;\n\n  const onRemoveClick = () => {\n    removeBlock(sceneId);\n  };\n\n  const onModifyClick = () => {\n    modifyBlock(sceneId);\n  };\n\n  return (\n    <Container>\n      <MenuGroup>\n        <MenuItem onClick={(e) => moveBlockBy(sceneId, -1)}>위로</MenuItem>\n        <MenuItem onClick={(e) => moveBlockBy(sceneId, 1)}>아래로</MenuItem>\n        <MenuItem onClick={onRemoveClick}>삭제</MenuItem>\n        <MenuItem onClick={onModifyClick}>수정</MenuItem>\n      </MenuGroup>\n      <SceneID>\n        {sceneId}{\" \"}\n        <small>\n          {sceneType === \"ending\"\n            ? \"🔚엔딩\"\n            : sceneType === \"text\"\n            ? \"💬채팅\"\n            : \"👥만남\"}\n        </small>\n      </SceneID>\n      {sceneType !== \"ending\" && <CharacterName>{characterName}</CharacterName>}\n      <SceneScript>{sceneScript}</SceneScript>\n      {sceneType !== \"ending\" && characterImage?.length > 0 && (\n        <FileDescription>🕺🏻{characterImage}</FileDescription>\n      )}\n      {sceneType !== \"ending\" && backgroundImage?.length > 0 && (\n        <FileDescription>🏞{backgroundImage}</FileDescription>\n      )}\n      {sceneType !== \"ending\" && sceneSound?.length > 0 && (\n        <FileDescription>🔈{sceneSound}</FileDescription>\n      )}\n      {sceneType !== \"ending\" && (\n        <>\n          {options.length === 0 ? (\n            <div>Next Scene ID : {nextSceneId}</div>\n          ) : (\n            <OptionGroup>\n              {options.map(({ answer, reaction, nextId }, i) => (\n                <OptionItem key={i}>\n                  {answer?.length > 0 ? (\n                    <Script color=\"lightcyan\">{answer}</Script>\n                  ) : null}\n                  {answer?.length > 0 ? \" → \" : null}\n                  {reaction?.length > 0 ? (\n                    <Script color=\"lightyellow\">{reaction}</Script>\n                  ) : null}\n                  {reaction?.length > 0 ? \" → \" : null}\n                  {blockList.findIndex((block) => block.sceneId === nextId) === -1 ? (\n                    <Red>{nextId}</Red>\n                  ) : (\n                    nextId\n                  )}\n                </OptionItem>\n              ))}\n            </OptionGroup>\n          )}\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default ScriptBlock;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ScriptBlock from \"./Partials/ScriptBlock\";\nimport { saveBlockList } from \"../Utils/api\";\n\nconst Container = styled.div`\n  padding: 5px 0px;\n`;\n\nfunction ScriptView({\n  blockList,\n  setBlockList,\n  setModifySceneId,\n  setIsSceneFormOpened,\n}) {\n  const moveBlockBy = (sceneId, by) => {\n    const index = blockList.findIndex((block) => block.sceneId === sceneId);\n    const at = index + by;\n    if (at < 0 || at >= blockList.length) return;\n    setBlockList((blockList) => {\n      const tmpArray = [\n        ...blockList.slice(0, index),\n        ...blockList.slice(index + 1),\n      ];\n      const result = [\n        ...tmpArray.slice(0, at),\n        blockList[index],\n        ...tmpArray.slice(at),\n      ];\n      saveBlockList(result);\n      return result;\n    });\n  };\n\n  const removeBlock = (sceneId) => {\n    if (!window.confirm(\"삭제한 후 되돌릴 수 없습니다. 삭제하시겠습니까?\"))\n      return;\n    setBlockList((blockList) => {\n      const removeIndex = blockList.findIndex(\n        (block) => block.sceneId === sceneId\n      );\n      saveBlockList(\n        blockList.slice(0, removeIndex).concat(blockList.slice(removeIndex + 1))\n      );\n      return blockList\n        .slice(0, removeIndex)\n        .concat(blockList.slice(removeIndex + 1));\n    });\n  };\n\n  const modifyBlock = (sceneId) => {\n    setIsSceneFormOpened( true )\n    setModifySceneId( sceneId )\n  }\n\n  return (\n    <Container>\n      {blockList.map(\n        (\n          {\n            sceneId,\n            characterName,\n            sceneScript,\n            characterImage,\n            backgroundImage,\n            sceneSound,\n            options,\n            nextSceneId,\n            sceneType,\n          },\n          i\n        ) => (\n          <ScriptBlock\n            key={sceneId}\n            sceneId={sceneId}\n            characterName={characterName}\n            sceneScript={sceneScript}\n            characterImage={characterImage}\n            backgroundImage={backgroundImage}\n            sceneSound={sceneSound}\n            options={options}\n            nextSceneId={nextSceneId}\n            sceneType={sceneType}\n            moveBlockBy={moveBlockBy}\n            removeBlock={removeBlock}\n            modifyBlock={modifyBlock}\n            blockList={blockList}\n          ></ScriptBlock>\n        )\n      )}\n    </Container>\n  );\n}\n\nexport default ScriptView;\n","export const DEFAULT_SCENE = {\n  sceneId: \"\",\n  characterName: \"\",\n  sceneScript: \"\",\n  characterImage: \"\",\n  backgroundImage: \"\",\n  sceneSound: \"\",\n  nextSceneId: \"\",\n  options: [\n    {\n      answer: \"\",\n      reaction: \"\",\n      nextId: \"\",\n    },\n  ],\n  sceneType: \"meet\",\n};\n\n\nexport const SCENE_TYPE_MEET = \"meet\"\nexport const SCENE_TYPE_TEXT = \"text\"\nexport const SCENE_TYPE_ENDING = \"ending\"","import React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  SCENE_TYPE_MEET,\n  SCENE_TYPE_TEXT,\n  SCENE_TYPE_ENDING,\n} from \"./constant\";\n\nconst Container = styled.div`\n  display: ${({ isOpend }) => (isOpend ? \"block\" : \"none\")};\n  padding: 10px 0px;\n  border-bottom: 1px solid gray;\n  z-index: 1;\n`;\nconst InputGroup = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst InputPair = styled.div`\n  padding: 3px 0px;\n`;\nconst Label = styled.label``;\nconst TextInput = styled.input``;\nconst TextArea = styled.textarea`\n  width: 100%;\n  height: 50px;\n  display: block;\n`;\n\nconst ScriptInputPresenter = ({\n  isOpend,\n  isModifyMode,\n  formData: {\n    sceneId,\n    characterName,\n    sceneScript,\n    characterImage,\n    backgroundImage,\n    sceneSound,\n    nextSceneId,\n    options,\n    sceneType,\n  },\n  onInputChange,\n  onOptionAddClick,\n  onOptionRemoveClick,\n  onNewBlockClick,\n  onModifyBlockClick,\n}) => (\n  <Container isOpend={isOpend}>\n    <InputPair>\n      <span>Scene Type : </span>\n      <TextInput\n        name=\"sceneType\"\n        id=\"scene-type-meet\"\n        data-value={SCENE_TYPE_MEET}\n        type=\"radio\"\n        checked={sceneType === SCENE_TYPE_MEET}\n        onChange={onInputChange}\n      ></TextInput>\n      <Label htmlFor=\"scene-type-meet\">만남</Label>\n      <TextInput\n        name=\"sceneType\"\n        id=\"scene-type-text\"\n        data-value={SCENE_TYPE_TEXT}\n        type=\"radio\"\n        checked={sceneType === SCENE_TYPE_TEXT}\n        onChange={onInputChange}\n      ></TextInput>\n      <Label htmlFor=\"scene-type-text\">문자</Label>\n      <TextInput\n        name=\"sceneType\"\n        id=\"scene-type-ending\"\n        data-value={SCENE_TYPE_ENDING}\n        type=\"radio\"\n        checked={sceneType === SCENE_TYPE_ENDING}\n        onChange={onInputChange}\n      ></TextInput>\n      <Label htmlFor=\"scene-type-ending\">엔딩</Label>\n    </InputPair>\n    <InputPair>\n      <Label htmlFor=\"scene-id\">Scene ID : </Label>\n      <TextInput\n        name=\"sceneId\"\n        id=\"scene-id\"\n        type=\"text\"\n        placeholder=\"#3-1\"\n        value={sceneId}\n        onChange={onInputChange}\n        disabled={isModifyMode}\n      ></TextInput>\n      {isModifyMode && <small> 수정 중</small>}\n    </InputPair>\n    {sceneType !== SCENE_TYPE_ENDING && (\n      <InputPair>\n        <Label htmlFor=\"character-name\">Character Name : </Label>\n        <TextInput\n          name=\"characterName\"\n          value={characterName}\n          onChange={onInputChange}\n          id=\"character-name\"\n          type=\"text\"\n          placeholder=\"John Mayer\"\n        ></TextInput>\n      </InputPair>\n    )}\n\n    <InputPair>\n      <Label htmlFor=\"scene-script\">Scene Script : </Label>\n      <TextArea\n        name=\"sceneScript\"\n        value={sceneScript}\n        onChange={onInputChange}\n        id=\"scene-script\"\n        placeholder={\n          sceneType !== SCENE_TYPE_ENDING\n            ? \"Hello, the weather is sunny. Shall we go picnic?\"\n            : \"Game Over, She didn't reply to your message forever\"\n        }\n      ></TextArea>\n    </InputPair>\n\n    {sceneType !== SCENE_TYPE_ENDING && (\n      <InputGroup>\n        <InputPair>\n          <Label htmlFor=\"character-image\">Character Image : </Label>\n          <TextInput\n            name=\"characterImage\"\n            value={characterImage}\n            onChange={onInputChange}\n            id=\"character-image\"\n            type=\"text\"\n            placeholder=\"smile.png (선택입력)\"\n          ></TextInput>\n        </InputPair>\n        <InputPair>\n          <Label htmlFor=\"background-image\">Background Image : </Label>\n          <TextInput\n            name=\"backgroundImage\"\n            value={backgroundImage}\n            onChange={onInputChange}\n            id=\"background-image\"\n            type=\"text\"\n            placeholder=\"park.png (선택입력)\"\n          ></TextInput>\n        </InputPair>\n        <InputPair>\n          <Label htmlFor=\"scene-sound\">Scene Sound : </Label>\n          <TextInput\n            name=\"sceneSound\"\n            value={sceneSound}\n            onChange={onInputChange}\n            id=\"scene-sound\"\n            type=\"text\"\n            placeholder=\"laugh.mp3 (선택입력)\"\n          ></TextInput>\n        </InputPair>\n      </InputGroup>\n    )}\n    {sceneType !== SCENE_TYPE_ENDING && (\n      <>\n        {options.length > 0 ? (\n          options.map(({ answer, reaction, nextId }, i) => (\n            <InputPair key={i} style={{ display: \"flex\" }}>\n              <Label>{i + 1}. </Label>\n              <TextInput\n                style={{ flex: 1 }}\n                type=\"text\"\n                placeholder=\"(대답) I like too\"\n                name=\"answer\"\n                data-option-index={i}\n                value={answer}\n                onChange={onInputChange}\n              ></TextInput>\n              <TextInput\n                style={{ flex: 1 }}\n                type=\"text\"\n                placeholder=\"(반응) Let's meet now\"\n                name=\"reaction\"\n                data-option-index={i}\n                value={reaction}\n                onChange={onInputChange}\n              ></TextInput>\n              <TextInput\n                type=\"text\"\n                placeholder={`#3-${i + 2}`}\n                name=\"nextId\"\n                data-option-index={i}\n                value={nextId}\n                onChange={onInputChange}\n              ></TextInput>\n            </InputPair>\n          ))\n        ) : (\n          <InputPair>\n            <Label htmlFor=\"next-scene-id\">Next Scene ID : </Label>\n            <TextInput\n              name=\"nextSceneId\"\n              value={nextSceneId}\n              onChange={onInputChange}\n              id=\"next-scene-id\"\n              type=\"text\"\n              placeholder=\"#4-1\"\n            ></TextInput>\n          </InputPair>\n        )}\n        <button onClick={onOptionAddClick}>선택지 추가</button>\n        {options.length > 0 && (\n          <button onClick={onOptionRemoveClick}>선택지 삭제</button>\n        )}\n        <br />\n      </>\n    )}\n    <button onClick={isModifyMode ? onModifyBlockClick : onNewBlockClick}>\n      {isModifyMode ? \"블럭 수정\" : \"블럭 추가\"}\n    </button>\n  </Container>\n);\n\nexport default ScriptInputPresenter;\n","import React, { useState, useEffect } from \"react\";\nimport ScriptInputPresenter from \"./ScriptInputPresenter\";\nimport { OPTION_MINIMUM_COUNT } from \"../../Utils/Constant\";\nimport { DEFAULT_SCENE } from \"./constant\";\n\nfunction ScriptInput({\n  createNewBlock,\n  modifyBlock,\n  blockList,\n  isOpend,\n  modifySceneId = null,\n}) {\n  const defaultScene = modifySceneId\n    ? blockList.find((data) => data.sceneId === modifySceneId)\n    : DEFAULT_SCENE;\n  useEffect(() => {\n    setFormData({\n      ...defaultScene\n    });\n  }, [defaultScene]);\n\n  let [formData, setFormData] = useState(defaultScene);\n  let { sceneId, options } = formData;\n\n  const onInputChange = (e) => {\n    const {\n      name,\n      value,\n      dataset: { optionIndex, value: dataValue },\n    } = e.target;\n    if (formData[name] === undefined && optionIndex === undefined) return;\n    if (dataValue !== undefined)\n      // for radio button\n      setFormData({\n        ...formData,\n        [name]: dataValue,\n      });\n    else if (optionIndex === undefined)\n      // for text input\n      setFormData({\n        ...formData,\n        [name]: value,\n      });\n    else {\n      // for option text input\n      setFormData((data) => {\n        data.options[optionIndex][name] = value;\n        return Object.assign({}, data);\n      });\n    }\n  };\n\n  const onOptionAddClick = (e) => {\n    setFormData({\n      ...formData,\n      options: formData.options.concat({\n        answer: \"\",\n        reaction: \"\",\n        nextId: \"\",\n      }),\n    });\n  };\n\n  const onOptionRemoveClick = (e) => {\n    if (options.length > OPTION_MINIMUM_COUNT)\n      setFormData({\n        ...formData,\n        options: options.slice(0, options.length - 1),\n      });\n  };\n\n  const onNewBlockClick = (e) => {\n    if (sceneId.length === 0) alert(\"Scene ID를 입력하세요.\");\n    else if (blockList.find((block) => block.sceneId === sceneId)) {\n      alert(\"중복되는 Scene Type과 Scene ID가 있습니다.\");\n    } else if (createNewBlock) {\n      createNewBlock(Object.assign({}, formData));\n      setFormData({\n        ...defaultScene,\n        options: [\n          {\n            answer: \"\",\n            reaction: \"\",\n            nextId: \"\",\n          },\n        ],\n      });\n    }\n  };\n\n  const onModifyBlockClick = (e) => {\n    modifyBlock(Object.assign({}, formData));\n  };\n\n  return (\n    <ScriptInputPresenter\n      isOpend={isOpend}\n      isModifyMode={modifySceneId !== null}\n      formData={formData}\n      onInputChange={onInputChange}\n      onOptionAddClick={onOptionAddClick}\n      onOptionRemoveClick={onOptionRemoveClick}\n      onNewBlockClick={onNewBlockClick}\n      onModifyBlockClick={onModifyBlockClick}\n    ></ScriptInputPresenter>\n  );\n}\n\nexport default ScriptInput;\n","import ScriptInputController from \"./ScriptInputController\";\n\nexport default ScriptInputController;\n","\nexport const OPTION_MINIMUM_COUNT = 0","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport ControlMenu from \"./Components/ControlMenu\";\nimport ScriptView from \"./Components/ScriptView\";\nimport ScriptInput from \"./Components/ScriptInput\";\nimport { loadBlockList, saveBlockList } from \"./Utils/api\";\n\nconst Container = styled.div`\n  @media (min-width: 800px) {\n    width: 80%;\n  }\n  margin: auto auto;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst BlockContainer = styled.div`\n  overflow-y: auto;\n`;\n\nfunction App() {\n  const cachedBlockList = loadBlockList();\n  let [blockList, setBlockList] = useState(cachedBlockList);\n  let [isSceneFormOpened, setIsSceneFormOpened] = useState(false);\n  let [modifySceneId, setModifySceneId] = useState(null);\n\n  const createNewBlock = (blockData) => {\n    saveBlockList([...blockList, blockData]);\n    setBlockList([...blockList, blockData]);\n  };\n\n  const modifyBlock = (blockData) => {\n    const targetIndex = blockList.findIndex(\n      (data) => data.sceneId === blockData.sceneId\n    );\n    if (targetIndex === -1) {\n      alert(`수정하고자하는 Scene ${blockData.sceneId}을 찾을 수 없습니다.`);\n      return;\n    }\n    saveBlockList([\n      ...blockList.slice(0, targetIndex),\n      blockData,\n      ...blockList.slice(targetIndex + 1),\n    ]);\n    setBlockList([\n      ...blockList.slice(0, targetIndex),\n      blockData,\n      ...blockList.slice(targetIndex + 1),\n    ]);\n    setModifySceneId(null);\n    setIsSceneFormOpened(false);\n  };\n\n  return (\n    <Container>\n      <ControlMenu\n        blockList={blockList}\n        setBlockList={setBlockList}\n        setModifySceneId={setModifySceneId}\n        setIsSceneFormOpened={setIsSceneFormOpened}\n      ></ControlMenu>\n      <ScriptInput\n        blockList={blockList}\n        createNewBlock={createNewBlock}\n        modifyBlock={modifyBlock}\n        isOpend={isSceneFormOpened}\n        modifySceneId={modifySceneId}\n      ></ScriptInput>\n      <BlockContainer>\n        <ScriptView\n          blockList={blockList}\n          setBlockList={setBlockList}\n          setModifySceneId={setModifySceneId}\n          setIsSceneFormOpened={setIsSceneFormOpened}\n        ></ScriptView>\n      </BlockContainer>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}