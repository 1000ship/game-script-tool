{"version":3,"sources":["Utils/api.js","Components/Partials/ScriptBlock.js","Components/ScriptView.js","Components/ScriptInput.js","App.js","serviceWorker.js","index.js"],"names":["saveBlockList","blockList","localStorage","setItem","JSON","stringify","alert","Container","styled","div","SceneID","CharacterName","SceneScript","OptionGroup","FileDescription","span","Script","MenuGroup","ul","MenuItem","li","ScriptBlock","props","sceneId","characterName","sceneScript","characterImage","backgroundImage","sceneSound","options","setBlockList","onClick","removeIndex","findIndex","block","slice","concat","map","i","answer","reaction","nextId","key","ScriptView","scriptInputHeight","style","marginTop","InputGroup","InputPair","Label","label","TextInput","input","TextArea","textarea","ScriptInput","createNewBlock","setScriptInputHeight","defaultState","useState","formData","setFormData","onInputChange","e","target","name","value","optionIndex","dataset","undefined","data","Object","assign","scriptInputElement","createRef","useEffect","current","offsetHeight","ref","htmlFor","id","type","placeholder","onChange","display","flex","data-option-index","length","find","App","cachedBlockList","parse","getItem","loadBlockList","blockData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.71fcb4f0.chunk.js","sourcesContent":["const LOCAL_STORAGE_ID = \"me.1000ship.game-script-tool\";\n\nexport const loadBlockList = () => {\n  let cachedBlockList;\n  try {\n    cachedBlockList = JSON.parse(localStorage.getItem(LOCAL_STORAGE_ID));\n    if (cachedBlockList === null) cachedBlockList = [];\n  } catch {\n    cachedBlockList = [];\n  }\n  return cachedBlockList;\n};\n\nexport const saveBlockList = (blockList) => {\n  try {\n    localStorage.setItem(\n      LOCAL_STORAGE_ID,\n      JSON.stringify(blockList)\n    );\n  } catch {\n    alert( \"자동 저장 중 문제 발생\")\n  }\n};\n\nexport const exportScript = (blockList) => {\n  try {\n\n  } catch {\n\n  }\n}\n\nexport const importScript = () => {\n  try {\n\n  } catch {\n    \n  }\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport { saveBlockList } from \"../../Utils/api\";\n\nconst Container = styled.div`\n  background-color: #efefef;\n  padding: 10px;\n  margin: 5px;\n  position: relative;\n`;\nconst SceneID = styled.div`\n  font-weight: 600;\n`;\nconst CharacterName = styled.div`\n  font-style: italic;\n  margin-top: 5px;\n`;\nconst SceneScript = styled.div`\n  margin-top: 5px;\n  background-color: white;\n  padding: 5px;\n  border-radius: 3px;\n`;\nconst OptionGroup = styled.div``;\nconst FileDescription = styled.span`\n  margin-right: 10px;\n  font-size: 13px;\n`;\nconst Script = styled.span`\n  background-color: white;\n  border-radius: 5px;\n  padding: 3px;\n  display: inline-block;\n`;\n\nconst MenuGroup = styled.ul`\n  margin: 0px;\n  padding: 0px;\n  list-style: none;\n  position: absolute;\n  right: 5px;\n  top: 5px;\n  display: flex;\n`;\nconst MenuItem = styled.li`\n  font-size: 12px;\n  margin-left: 6px;\n  cursor: pointer;\n  &:hover {\n    font-weight: bolder;\n  }\n`;\n\nfunction ScriptBlock(props) {\n  var {\n    sceneId,\n    characterName,\n    sceneScript,\n    characterImage,\n    backgroundImage,\n    sceneSound,\n    options,\n    setBlockList,\n  } = props;\n\n  const onRemoveClick = () => {\n    setBlockList((blockList) => {\n      const removeIndex = blockList.findIndex(\n        (block) => block.sceneId === sceneId\n      );\n      saveBlockList(\n        blockList.slice(0, removeIndex).concat(blockList.slice(removeIndex + 1))\n      );\n      return blockList\n        .slice(0, removeIndex)\n        .concat(blockList.slice(removeIndex + 1));\n    });\n  };\n\n  return (\n    <Container>\n      <MenuGroup>\n        <MenuItem>위로</MenuItem>\n        <MenuItem>아래로</MenuItem>\n        <MenuItem onClick={onRemoveClick}>삭제</MenuItem>\n        <MenuItem>수정</MenuItem>\n      </MenuGroup>\n      <SceneID>{sceneId}</SceneID>\n      <CharacterName>{characterName}</CharacterName>\n      <SceneScript>{sceneScript}</SceneScript>\n      <FileDescription>{characterImage}</FileDescription>\n      <FileDescription>{backgroundImage}</FileDescription>\n      <FileDescription>{sceneSound}</FileDescription>\n      <ol>\n        {options.map(({ answer, reaction, nextId }, i) => (\n          <li key={i}>\n            <Script>{answer}</Script> → <Script>{reaction}</Script> → {nextId}\n          </li>\n        ))}\n      </ol>\n      <OptionGroup></OptionGroup>\n    </Container>\n  );\n}\n\nexport default ScriptBlock;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport ScriptBlock from \"./Partials/ScriptBlock\";\n\nconst Container = styled.div`\n  padding: 5px 0px;\n`;\n\nfunction ScriptView({ blockList, setBlockList, scriptInputHeight }) {\n\n  return (\n    <Container style={{marginTop: `${scriptInputHeight}px`}}>\n      {blockList.map(\n        ({\n          sceneId,\n          characterName,\n          sceneScript,\n          characterImage,\n          backgroundImage,\n          sceneSound,\n          options,\n        }, i) => (\n          <ScriptBlock\n            key={sceneId}\n            sceneId={sceneId}\n            characterName={characterName}\n            sceneScript={sceneScript}\n            characterImage={characterImage}\n            backgroundImage={backgroundImage}\n            sceneSound={sceneSound}\n            options={options}\n            setBlockList={setBlockList}\n          ></ScriptBlock>\n        )\n      )}\n    </Container>\n  );\n}\n\nexport default ScriptView;\n","import React, { useState, useRef, createRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 80%;\n  padding: 15px 0px;\n  margin: auto auto;\n  background-color: white;\n  position: fixed;\n  left: 10%;\n  top: 0;\n  z-index: 1;\n  border-bottom: 1px solid gray;\n`;\nconst InputGroup = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst InputPair = styled.div`\n  padding: 3px 0px;\n`;\nconst Label = styled.label``;\nconst TextInput = styled.input``;\nconst TextArea = styled.textarea`\n  width: 100%;\n  height: 50px;\n  display: block;\n`;\n\nfunction ScriptInput({ createNewBlock, blockList, setScriptInputHeight }) {\n  const defaultState = {\n    sceneId: \"\",\n    characterName: \"\",\n    sceneScript: \"\",\n    characterImage: \"\",\n    backgroundImage: \"\",\n    sceneSound: \"\",\n    options: [\n      {\n        answer: \"\",\n        reaction: \"\",\n        nextId: \"\",\n      },\n    ],\n  };\n  let [formData, setFormData] = useState(defaultState);\n  let {\n    sceneId,\n    characterName,\n    sceneScript,\n    characterImage,\n    backgroundImage,\n    sceneSound,\n    options,\n  } = formData;\n\n  const onInputChange = (e) => {\n    const {\n      name,\n      value,\n      dataset: { optionIndex },\n    } = e.target;\n    if (formData[name] === undefined && optionIndex === undefined) return;\n    if (optionIndex === undefined)\n      setFormData({\n        ...formData,\n        [name]: value,\n      });\n    else {\n      setFormData((data) => {\n        data.options[optionIndex][name] = value;\n        return Object.assign({}, data);\n      });\n    }\n  };\n\n  const onOptionAddClick = (e) => {\n    setFormData({\n      ...formData,\n      options: formData.options.concat({\n        answer: \"\",\n        reaction: \"\",\n        nextId: \"\",\n      }),\n    });\n  };\n\n  const onOptionRemoveClick = (e) => {\n    if (options.length > 1)\n      setFormData({\n        ...formData,\n        options: options.slice(0, options.length - 1),\n      });\n  };\n\n  const onNewBlockClick = (e) => {\n    if (sceneId.length === 0) alert(\"Scene ID를 입력하세요.\");\n    else if (blockList.find((block) => block.sceneId === sceneId)) {\n      alert(\"중복되는 Scene ID가 있습니다.\");\n    } else if (createNewBlock) {\n      createNewBlock(Object.assign({}, formData));\n      setFormData(defaultState);\n    }\n  };\n\n  const scriptInputElement = createRef()\n  useEffect( (e) => {\n    if( scriptInputElement?.current === undefined ) return\n    setScriptInputHeight( scriptInputElement.current?.offsetHeight)\n  }, [scriptInputElement?.current?.offsetHeight])\n\n  return (\n    <Container ref={scriptInputElement}>\n      <InputPair>\n        <Label htmlFor=\"scene-id\">Scene ID : </Label>\n        <TextInput\n          name=\"sceneId\"\n          id=\"scene-id\"\n          type=\"text\"\n          placeholder=\"#3-1\"\n          value={sceneId}\n          onChange={onInputChange}\n        ></TextInput>\n      </InputPair>\n      <InputPair>\n        <Label htmlFor=\"character-name\">Character Name : </Label>\n        <TextInput\n          name=\"characterName\"\n          value={characterName}\n          onChange={onInputChange}\n          id=\"character-name\"\n          type=\"text\"\n          placeholder=\"John Mayer\"\n        ></TextInput>\n      </InputPair>\n\n      <InputPair>\n        <Label htmlFor=\"scene-script\">Scene Script : </Label>\n        <TextArea\n          name=\"sceneScript\"\n          value={sceneScript}\n          onChange={onInputChange}\n          id=\"scene-script\"\n          placeholder=\"Hello, the weather is sunny. Shall we go picnic?\"\n        ></TextArea>\n      </InputPair>\n\n      <InputGroup>\n        <InputPair>\n          <Label htmlFor=\"character-image\">Character Image : </Label>\n          <TextInput\n            name=\"characterImage\"\n            value={characterImage}\n            onChange={onInputChange}\n            id=\"character-image\"\n            type=\"text\"\n            placeholder=\"smile.png (선택입력)\"\n          ></TextInput>\n        </InputPair>\n        <InputPair>\n          <Label htmlFor=\"background-image\">Background Image : </Label>\n          <TextInput\n            name=\"backgroundImage\"\n            value={backgroundImage}\n            onChange={onInputChange}\n            id=\"background-image\"\n            type=\"text\"\n            placeholder=\"park.png (선택입력)\"\n          ></TextInput>\n        </InputPair>\n        <InputPair>\n          <Label htmlFor=\"scene-sound\">Scene Sound : </Label>\n          <TextInput\n            name=\"sceneSound\"\n            value={sceneSound}\n            onChange={onInputChange}\n            id=\"scene-sound\"\n            type=\"text\"\n            placeholder=\"laugh.mp3 (선택입력)\"\n          ></TextInput>\n        </InputPair>\n      </InputGroup>\n\n      {options.map(({ answer, reaction, nextId }, i) => (\n        <InputPair key={i} style={{display:'flex'}}>\n          <Label>{i + 1}. </Label>\n          <TextInput\n            style={{flex: 1}}\n            type=\"text\"\n            placeholder=\"(대답) I like too\"\n            name=\"answer\"\n            data-option-index={i}\n            value={answer}\n            onChange={onInputChange}\n          ></TextInput>\n          <TextInput\n            style={{flex: 1}}\n            type=\"text\"\n            placeholder=\"(반응) Let's meet now\"\n            name=\"reaction\"\n            data-option-index={i}\n            value={reaction}\n            onChange={onInputChange}\n          ></TextInput>\n          <TextInput\n            type=\"text\"\n            placeholder={`#3-${i + 2}`}\n            name=\"nextId\"\n            data-option-index={i}\n            value={nextId}\n            onChange={onInputChange}\n          ></TextInput>\n        </InputPair>\n      ))}\n      <button onClick={onOptionAddClick}>선택지 추가</button>\n      <button onClick={onOptionRemoveClick}>선택지 삭제</button>\n      <br />\n      <button onClick={onNewBlockClick}>블럭 추가</button>\n    </Container>\n  );\n}\n\nexport default ScriptInput;\n","import React, { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport ScriptView from \"./Components/ScriptView\";\nimport ScriptInput from \"./Components/ScriptInput\";\nimport { loadBlockList, saveBlockList } from \"./Utils/api\";\n\nconst Container = styled.div`\n  width: 80%;\n  margin: auto auto;\n`;\n\nfunction App() {\n  const cachedBlockList = loadBlockList()\n  let [blockList, setBlockList] = useState(cachedBlockList);\n  let [scriptInputHeight, setScriptInputHeight] = useState(0)\n\n  const createNewBlock = (blockData) => {\n    saveBlockList([...blockList, blockData])\n    setBlockList([...blockList, blockData]);\n  };\n\n  return (\n    <Container>\n      <ScriptInput\n        blockList={blockList}\n        createNewBlock={createNewBlock}\n        setScriptInputHeight={setScriptInputHeight}\n      ></ScriptInput>\n      <ScriptView\n        blockList={blockList}\n        setBlockList={setBlockList}\n        scriptInputHeight={scriptInputHeight}\n      ></ScriptView>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}