{"version":3,"sources":["Utils/api.js","Stores/atom.js","Stores/selector.js","Components/ControlMenu.js","Components/ScriptInput/constant.js","Components/ScriptInput/ScriptInputPresenter.js","Components/ScriptInput/ScriptInputController.js","Components/ScriptInput/index.js","Utils/Constant.js","Components/Partials/ScriptBlock.js","Components/ScriptView.js","App.js","serviceWorker.js","index.js"],"names":["exportScript","blockList","data","filename","type","file","Blob","window","navigator","msSaveOrOpenBlob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","JSON","stringify","parseInt","Math","random","alert","importScript","callback","input","accept","onchange","event","reader","FileReader","readAsText","onload","parse","result","processFile","target","files","blockListAtom","atom","key","default","cachedBlockList","localStorage","getItem","loadBlockList","appStateAtom","isSceneFormOpened","modifySceneId","blockListSelector","selector","get","set","newValue","setItem","saveBlockList","Container","styled","div","ControlButton","button","ControlMenu","setAppState","useSetRecoilState","useRecoilState","setBlockList","setBlockListWithoutSave","onClick","e","confirm","appState","DEFAULT_SCENE","sceneId","characterName","sceneScript","characterImage","backgroundImage","sceneSound","backgroundSound","nextSceneId","options","answer","reaction","nextId","sceneType","InputGroup","InputPair","Label","label","TextInput","TextArea","textarea","ScriptInputPresenter","isModifyMode","formData","onInputChange","onOptionAddClick","onOptionRemoveClick","onNewBlockClick","onModifyBlockClick","name","id","data-value","checked","onChange","htmlFor","placeholder","value","disabled","length","map","i","style","display","flex","data-option-index","ScriptInput","ScriptInputController","createNewBlock","modifyBlock","useRecoilValue","defaultScene","useMemo","find","useEffect","setFormData","useState","console","log","dataset","optionIndex","dataValue","undefined","concat","slice","block","Anchor","Red","SceneID","CharacterName","SceneScript","OptionGroup","ol","OptionItem","li","FileDescription","span","Script","props","color","MenuGroup","ul","MenuItem","ScriptBlock","moveBlockBy","removeBlock","aria-label","message","findIndex","ScriptView","by","index","at","tmpArray","filter","BlockContainer","App","blockData","targetIndex","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.e8a23c89.chunk.js","sourcesContent":["const LOCAL_STORAGE_ID = \"me.1000ship.game-script-tool\";\n\nexport const loadBlockList = () => {\n  let cachedBlockList;\n  try {\n    cachedBlockList = JSON.parse(localStorage.getItem(LOCAL_STORAGE_ID));\n    if (cachedBlockList === null) cachedBlockList = [];\n  } catch {\n    cachedBlockList = [];\n  }\n  return cachedBlockList;\n};\n\nexport const saveBlockList = (blockList) => {\n  try {\n    localStorage.setItem(LOCAL_STORAGE_ID, JSON.stringify(blockList));\n  } catch {\n    alert(\"자동 저장 중 문제 발생\");\n  }\n};\n\nexport const exportScript = (blockList) => {\n  try {\n    download(\n      JSON.stringify(blockList),\n      `script_${parseInt(Math.random() * 1000)}`,\n      \"txt\"\n    );\n  } catch {\n    alert(\"저장하는데 문제가 생겼어요\");\n  }\n};\n\nexport const importScript = (callback) => {\n  try {\n    var input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.accept = \"text/plain, text/html, .jsp\";\n    input.click();\n    input.onchange = function (event) {\n      processFile(event.target.files[0]);\n    };\n    function processFile(file) {\n      var reader = new FileReader();\n      reader.readAsText(file, \"UTF-8\");\n      reader.onload = function () {\n        callback( JSON.parse(reader.result) )\n      };\n    }\n  } catch {\n    alert(\"불러오는데 문제가 생겼어요\");\n  }\n};\n\nfunction download(data, filename, type) {\n  var file = new Blob([data], { type: type });\n  if (window.navigator.msSaveOrOpenBlob)\n    // IE10+\n    window.navigator.msSaveOrOpenBlob(file, filename);\n  else {\n    // Others\n    var a = document.createElement(\"a\"),\n      url = URL.createObjectURL(file);\n    a.href = url;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    setTimeout(function () {\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);\n    }, 0);\n  }\n}\n","import { atom } from \"recoil\";\nimport { loadBlockList } from \"../Utils/api\";\n\nexport const blockListAtom = atom({\n  key: \"blockListAtom\",\n  default: loadBlockList(),\n});\n\nexport const appStateAtom = atom({\n  key: \"appStateAtom\",\n  default: {\n    isSceneFormOpened: false,\n    modifySceneId: null,\n  },\n});\n","import { selector } from \"recoil\";\nimport { saveBlockList } from \"../Utils/api\";\nimport { blockListAtom } from \"./atom\";\n\nexport const blockListSelector = selector({\n  key: \"blockListSelector\",\n  get({ get }) {\n    return get(blockListAtom);\n  },\n  set({ set }, newValue) {\n    saveBlockList(newValue);\n    set(blockListAtom, newValue);\n  },\n});\n","import React from \"react\";\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { appStateAtom, blockListAtom } from \"../Stores/atom\";\nimport { blockListSelector } from \"../Stores/selector\";\nimport { exportScript, importScript } from \"../Utils/api\";\n\nconst Container = styled.div`\n  position: fixed;\n  right: 5px;\n  bottom: 5px;\n  z-index: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ControlButton = styled.button`\n  padding: 5px 5px;\n`;\n\nconst ControlMenu = () => {\n  const setAppState = useSetRecoilState(appStateAtom);\n  const [blockList, setBlockList] = useRecoilState(blockListSelector);\n  const setBlockListWithoutSave = useSetRecoilState(blockListAtom);\n\n  const onAddSceneBlockClick = (e) => {\n    setAppState((appState) => ({\n      ...appState,\n      isSceneFormOpened: !appState.isSceneFormOpened,\n      modifySceneId: null,\n    }));\n  };\n\n  const onImportClick = (e) => importScript((data) => setBlockList(data));\n  const onExportClick = (e) => exportScript(blockList);\n  const onClearScriptClick = (e) => {\n    if (!window.confirm(\"정말 모든 Scene을 삭제할까요??\")) return;\n    setBlockListWithoutSave([]);\n    window.alert(\"삭제했습니다. 원치않았다면 지금 당장 새로고침을 눌러주세요.\");\n  };\n\n  return (\n    <Container>\n      <ControlButton onClick={onClearScriptClick}>Clear Script</ControlButton>\n      <ControlButton onClick={onAddSceneBlockClick}>Add Scene Block</ControlButton>\n      <ControlButton onClick={onImportClick}>Import Script</ControlButton>\n      <ControlButton onClick={onExportClick}>Export Script</ControlButton>\n    </Container>\n  );\n};\n\nexport default ControlMenu;\n","export const DEFAULT_SCENE = {\n  sceneId: \"\",\n  characterName: \"\",\n  sceneScript: \"\",\n  characterImage: \"\",\n  backgroundImage: \"\",\n  sceneSound: \"\",\n  backgroundSound: \"\",\n  nextSceneId: \"\",\n  options: [\n    {\n      answer: \"\",\n      reaction: \"\",\n      nextId: \"\",\n    },\n  ],\n  sceneType: \"meet\",\n};\n\n\nexport const SCENE_TYPE_MEET = \"meet\"\nexport const SCENE_TYPE_TEXT = \"text\"\nexport const SCENE_TYPE_ENDING = \"ending\"","import React from \"react\";\nimport styled from \"styled-components\";\nimport { SCENE_TYPE_MEET, SCENE_TYPE_TEXT, SCENE_TYPE_ENDING } from \"./constant\";\n\nconst Container = styled.div`\n  padding: 10px 0px;\n  border-bottom: 1px solid gray;\n  z-index: 1;\n`;\nconst InputGroup = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst InputPair = styled.div`\n  padding: 3px 0px;\n`;\nconst Label = styled.label``;\nconst TextInput = styled.input``;\nconst TextArea = styled.textarea`\n  width: 100%;\n  height: 50px;\n  display: block;\n`;\n\nconst ScriptInputPresenter = ({\n  isModifyMode,\n  formData: { sceneId, characterName, sceneScript, characterImage, backgroundImage, sceneSound, backgroundSound, nextSceneId, options, sceneType },\n  onInputChange,\n  onOptionAddClick,\n  onOptionRemoveClick,\n  onNewBlockClick,\n  onModifyBlockClick,\n}) => (\n  <Container>\n    <InputPair>\n      <span>Scene Type : </span>\n      <TextInput name=\"sceneType\" id=\"scene-type-meet\" data-value={SCENE_TYPE_MEET} type=\"radio\" checked={sceneType === SCENE_TYPE_MEET} onChange={onInputChange}></TextInput>\n      <Label htmlFor=\"scene-type-meet\">만남</Label>\n      <TextInput name=\"sceneType\" id=\"scene-type-text\" data-value={SCENE_TYPE_TEXT} type=\"radio\" checked={sceneType === SCENE_TYPE_TEXT} onChange={onInputChange}></TextInput>\n      <Label htmlFor=\"scene-type-text\">문자</Label>\n      <TextInput name=\"sceneType\" id=\"scene-type-ending\" data-value={SCENE_TYPE_ENDING} type=\"radio\" checked={sceneType === SCENE_TYPE_ENDING} onChange={onInputChange}></TextInput>\n      <Label htmlFor=\"scene-type-ending\">엔딩</Label>\n    </InputPair>\n    <InputPair>\n      <Label htmlFor=\"scene-id\">Scene ID : </Label>\n      <TextInput name=\"sceneId\" id=\"scene-id\" type=\"text\" placeholder=\"#3-1\" value={sceneId} onChange={onInputChange} disabled={isModifyMode}></TextInput>\n      {isModifyMode && <small> 수정 중</small>}\n    </InputPair>\n    {sceneType !== SCENE_TYPE_ENDING && (\n      <InputPair>\n        <Label htmlFor=\"character-name\">Character Name : </Label>\n        <TextInput name=\"characterName\" value={characterName} onChange={onInputChange} id=\"character-name\" type=\"text\" placeholder=\"John Mayer\"></TextInput>\n      </InputPair>\n    )}\n\n    <InputPair>\n      <Label htmlFor=\"scene-script\">Scene Script : </Label>\n      <TextArea\n        name=\"sceneScript\"\n        value={sceneScript}\n        onChange={onInputChange}\n        id=\"scene-script\"\n        placeholder={sceneType !== SCENE_TYPE_ENDING ? \"Hello, the weather is sunny. Shall we go picnic?\" : \"Game Over, She didn't reply to your message forever\"}\n      ></TextArea>\n    </InputPair>\n\n    {sceneType !== SCENE_TYPE_ENDING && (\n      <InputGroup>\n        <InputPair>\n          <Label htmlFor=\"character-image\">Character Image : </Label>\n          <TextInput name=\"characterImage\" value={characterImage} onChange={onInputChange} id=\"character-image\" type=\"text\" placeholder=\"smile.png (선택입력)\"></TextInput>\n        </InputPair>\n        <InputPair>\n          <Label htmlFor=\"background-image\">Background Image : </Label>\n          <TextInput name=\"backgroundImage\" value={backgroundImage} onChange={onInputChange} id=\"background-image\" type=\"text\" placeholder=\"park.png (선택입력)\"></TextInput>\n        </InputPair>\n        <InputPair>\n          <Label htmlFor=\"scene-sound\">Scene Sound : </Label>\n          <TextInput name=\"sceneSound\" value={sceneSound} onChange={onInputChange} id=\"scene-sound\" type=\"text\" placeholder=\"laugh.mp3 (선택입력)\"></TextInput>\n        </InputPair>\n        <InputPair>\n          <Label htmlFor=\"background-sound\">Background Sound : </Label>\n          <TextInput name=\"backgroundSound\" value={backgroundSound} onChange={onInputChange} id=\"background-sound\" type=\"text\" placeholder=\"cafe.mp3 (선택입력)\"></TextInput>\n        </InputPair>\n      </InputGroup>\n    )}\n    {sceneType !== SCENE_TYPE_ENDING && (\n      <>\n        {options.length > 0 ? (\n          options.map(({ answer, reaction, nextId }, i) => (\n            <InputPair key={i} style={{ display: \"flex\" }}>\n              <Label>{i + 1}. </Label>\n              <TextInput style={{ flex: 1 }} type=\"text\" placeholder=\"(대답) I like too\" name=\"answer\" data-option-index={i} value={answer} onChange={onInputChange}></TextInput>\n              <TextInput style={{ flex: 1 }} type=\"text\" placeholder=\"(반응) Let's meet now\" name=\"reaction\" data-option-index={i} value={reaction} onChange={onInputChange}></TextInput>\n              <TextInput type=\"text\" placeholder={`#3-${i + 2}`} name=\"nextId\" data-option-index={i} value={nextId} onChange={onInputChange}></TextInput>\n            </InputPair>\n          ))\n        ) : (\n          <InputPair>\n            <Label htmlFor=\"next-scene-id\">Next Scene ID : </Label>\n            <TextInput name=\"nextSceneId\" value={nextSceneId} onChange={onInputChange} id=\"next-scene-id\" type=\"text\" placeholder=\"#4-1\"></TextInput>\n          </InputPair>\n        )}\n        <button onClick={onOptionAddClick}>선택지 추가</button>\n        {options.length > 0 && <button onClick={onOptionRemoveClick}>선택지 삭제</button>}\n        <br />\n      </>\n    )}\n    <button onClick={isModifyMode ? onModifyBlockClick : onNewBlockClick}>{isModifyMode ? \"블럭 수정\" : \"블럭 추가\"}</button>\n  </Container>\n);\n\nexport default ScriptInputPresenter;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { appStateAtom } from \"../../Stores/atom\";\nimport { blockListSelector } from \"../../Stores/selector\";\nimport { OPTION_MINIMUM_COUNT } from \"../../Utils/Constant\";\nimport { DEFAULT_SCENE } from \"./constant\";\nimport ScriptInputPresenter from \"./ScriptInputPresenter\";\n\nfunction ScriptInput({ createNewBlock, modifyBlock }) {\n  const appState = useRecoilValue(appStateAtom);\n  const blockList = useRecoilValue(blockListSelector);\n  const { modifySceneId } = appState;\n\n  const defaultScene = useMemo(() => (modifySceneId ? blockList.find((data) => data.sceneId === modifySceneId) : DEFAULT_SCENE), [blockList, modifySceneId]);\n  useEffect(() => {\n    setFormData({ ...defaultScene });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let [formData, setFormData] = useState(defaultScene);\n\n  useEffect(() => {\n    console.log(formData);\n  }, [formData]);\n\n  const onInputChange = (e) => {\n    const {\n      name,\n      value,\n      dataset: { optionIndex, value: dataValue },\n    } = e.target;\n    if (optionIndex !== undefined) {\n      // for option text input\n      setFormData((data) => {\n        data.options[optionIndex][name] = value;\n        return { ...data };\n      });\n    } else {\n      // for text input, radio button\n      setFormData({\n        ...formData,\n        [name]: dataValue ? dataValue : value,\n      });\n    }\n  };\n\n  const onOptionAddClick = (e) => {\n    setFormData({\n      ...formData,\n      options: formData.options.concat({\n        answer: \"\",\n        reaction: \"\",\n        nextId: \"\",\n      }),\n    });\n  };\n\n  const onOptionRemoveClick = (e) => {\n    if (formData.options.length > OPTION_MINIMUM_COUNT)\n      setFormData((formData) => ({\n        ...formData,\n        options: formData.options.slice(0, formData.options.length - 1),\n      }));\n  };\n\n  const onNewBlockClick = (e) => {\n    if (formData.sceneId.length === 0) alert(\"Scene ID를 입력하세요.\");\n    else if (blockList.find((block) => block.sceneId === formData.sceneId)) {\n      alert(\"중복되는 Scene Type과 Scene ID가 있습니다.\");\n    } else if (createNewBlock) {\n      createNewBlock({ ...formData });\n      setFormData({\n        ...defaultScene,\n        options: [\n          {\n            answer: \"\",\n            reaction: \"\",\n            nextId: \"\",\n          },\n        ],\n      });\n    }\n  };\n\n  const onModifyBlockClick = (e) => modifyBlock({ ...formData });\n\n  return (\n    <ScriptInputPresenter\n      isModifyMode={modifySceneId !== null}\n      formData={formData}\n      onInputChange={onInputChange}\n      onOptionAddClick={onOptionAddClick}\n      onOptionRemoveClick={onOptionRemoveClick}\n      onNewBlockClick={onNewBlockClick}\n      onModifyBlockClick={onModifyBlockClick}\n    ></ScriptInputPresenter>\n  );\n}\n\nexport default ScriptInput;\n","import ScriptInputController from \"./ScriptInputController\";\n\nexport default ScriptInputController;\n","\nexport const OPTION_MINIMUM_COUNT = 0","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Anchor = styled.a`\n  color: inherit;\n  text-decoration: none;\n`;\n\nconst Red = styled(Anchor)`\n  color: red;\n  font-weight: bolder;\n`;\n\nconst Container = styled.div`\n  background-color: #efefef;\n  padding: 10px;\n  margin: 5px;\n  position: relative;\n`;\nconst SceneID = styled.div`\n  font-weight: 800;\n  cursor: pointer;\n  & small {\n    font-weight: 400;\n    cursor: default;\n    margin-left: 8px;\n  }\n`;\nconst CharacterName = styled.div`\n  font-style: italic;\n  margin-top: 5px;\n`;\nconst SceneScript = styled.div`\n  margin-top: 5px;\n  background-color: white;\n  padding: 5px;\n  border-radius: 3px;\n`;\nconst OptionGroup = styled.ol``;\nconst OptionItem = styled.li``;\nconst FileDescription = styled.span`\n  margin-right: 10px;\n  font-size: 13px;\n`;\nconst Script = styled.span`\n  background-color: ${(props) => (props.color ? props.color : \"white\")};\n  border-radius: 5px;\n  padding: 3px;\n  display: inline-block;\n`;\n\nconst MenuGroup = styled.ul`\n  margin: 0px;\n  padding: 0px;\n  list-style: none;\n  position: absolute;\n  right: 5px;\n  top: 5px;\n  display: flex;\n`;\nconst MenuItem = styled.li`\n  font-size: 12px;\n  margin-left: 6px;\n  cursor: pointer;\n  &:hover {\n    font-weight: bolder;\n  }\n`;\n\nconst ScriptBlock = (props) => {\n  const { block, moveBlockBy, removeBlock, modifyBlock, blockList } = props;\n\n  const onRemoveClick = () => {\n    removeBlock(block.sceneId);\n  };\n\n  const onModifyClick = () => {\n    modifyBlock(block.sceneId);\n  };\n\n  const alertMessage = (message) => (e) => {\n    alert(message);\n  };\n\n  return (\n    <Container id={block.sceneId}>\n      <MenuGroup>\n        <MenuItem onClick={(e) => moveBlockBy(block.sceneId, -1)}>위로</MenuItem>\n        <MenuItem onClick={(e) => moveBlockBy(block.sceneId, 1)}>아래로</MenuItem>\n        <MenuItem onClick={onRemoveClick}>삭제</MenuItem>\n        <MenuItem onClick={onModifyClick}>수정</MenuItem>\n      </MenuGroup>\n      <Anchor href={`#${block.sceneId}`}>\n        <SceneID>\n          {block.sceneId} <small>{block.sceneType === \"ending\" ? \"🔚엔딩\" : block.sceneType === \"text\" ? \"💬채팅\" : \"👥만남\"}</small>\n        </SceneID>\n      </Anchor>\n      {block.sceneType !== \"ending\" && <CharacterName>{block.characterName}</CharacterName>}\n      <SceneScript>{block.sceneScript}</SceneScript>\n      {block.sceneType !== \"ending\" && block.characterImage?.length > 0 && (\n        <FileDescription aria-label=\"man\">\n          🕺🏻캐릭터이미지 <b>\"{block.characterImage}\"</b>\n        </FileDescription>\n      )}\n      {block.sceneType !== \"ending\" && block.backgroundImage?.length > 0 && (\n        <FileDescription aria-label=\"landscape\">\n          🏞배경이미지 <b>\"{block.backgroundImage}\"</b>\n        </FileDescription>\n      )}\n      {block.sceneType !== \"ending\" && block.sceneSound?.length > 0 && (\n        <FileDescription aria-label=\"speaker\">\n          🔈대사 <b>\"{block.sceneSound}\"</b>\n        </FileDescription>\n      )}\n      {block.sceneType !== \"ending\" && block.backgroundSound?.length > 0 && (\n        <FileDescription aria-label=\"music\">\n          🎼배경음악 <b>\"{block.backgroundSound}\"</b>\n        </FileDescription>\n      )}\n      {block.sceneType !== \"ending\" && (\n        <>\n          {block.options.length === 0 ? (\n            <div>Next Scene ID : {block.nextSceneId}</div>\n          ) : (\n            <OptionGroup>\n              {block.options.map(({ answer, reaction, nextId }, i) => (\n                <OptionItem key={i}>\n                  {answer?.length > 0 ? (\n                    <>\n                      <Script color=\"lightcyan\">{answer}</Script> 선택 시\n                    </>\n                  ) : null}\n                  {answer?.length > 0 ? \" → \" : null}\n                  {reaction?.length > 0 ? (\n                    <>\n                      <Script color=\"lightyellow\">{reaction}</Script> 반응\n                    </>\n                  ) : null}\n                  {reaction?.length > 0 ? \" → \" : null}\n                  {blockList.findIndex((block) => block.sceneId === nextId) === -1 ? (\n                    <Red href=\"#\" onClick={alertMessage(\"존재하지 않는 Scene ID 입니다.\")}>\n                      {nextId}\n                    </Red>\n                  ) : (\n                    <Anchor href={`#${nextId}`}>\n                      <b>{nextId}</b>\n                    </Anchor>\n                  )}{\" \"}\n                  장면 이동\n                </OptionItem>\n              ))}\n            </OptionGroup>\n          )}\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default ScriptBlock;\n","import React from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { appStateAtom } from \"../Stores/atom\";\nimport { blockListSelector } from \"../Stores/selector\";\nimport ScriptBlock from \"./Partials/ScriptBlock\";\n\nconst Container = styled.div`\n  padding: 5px 0px;\n`;\n\nconst ScriptView = () => {\n  const [blockList, setBlockList] = useRecoilState(blockListSelector);\n  const [appState, setAppState] = useRecoilState(appStateAtom);\n\n  const moveBlockBy = (sceneId, by) => {\n    setBlockList((blockList) => {\n      const index = blockList.findIndex((block) => block.sceneId === sceneId);\n      const at = index + by;\n      if (at < 0 || at >= blockList.length) return blockList;\n      const tmpArray = [...blockList.slice(0, index), ...blockList.slice(index + 1)];\n      const result = [...tmpArray.slice(0, at), blockList[index], ...tmpArray.slice(at)];\n      return result;\n    });\n  };\n\n  const removeBlock = (sceneId) => {\n    if (!window.confirm(\"삭제한 후 되돌릴 수 없습니다. 삭제하시겠습니까?\")) return;\n    setBlockList((blockList) => blockList.filter((block) => block.sceneId !== sceneId));\n  };\n\n  const modifyBlock = (sceneId) => setAppState({ ...appState, isSceneFormOpened: true, modifySceneId: sceneId });\n\n  return (\n    <Container>\n      {blockList.map((block, i) => (\n        <ScriptBlock key={block.sceneId} block={block} moveBlockBy={moveBlockBy} removeBlock={removeBlock} modifyBlock={modifyBlock} blockList={blockList}></ScriptBlock>\n      ))}\n    </Container>\n  );\n};\n\nexport default ScriptView;\n","import React from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport ControlMenu from \"./Components/ControlMenu\";\nimport ScriptInput from \"./Components/ScriptInput\";\nimport ScriptView from \"./Components/ScriptView\";\nimport { appStateAtom } from \"./Stores/atom\";\nimport { blockListSelector } from \"./Stores/selector\";\n\nconst Container = styled.div`\n  @media (min-width: 800px) {\n    width: 80%;\n  }\n  margin: auto auto;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst BlockContainer = styled.div`\n  overflow-y: auto;\n`;\n\nfunction App() {\n  const [blockList, setBlockList] = useRecoilState(blockListSelector);\n  const [appState, setAppState] = useRecoilState(appStateAtom);\n\n  const createNewBlock = (blockData) => {\n    setBlockList((blockList) => [...blockList, blockData]);\n  };\n\n  const modifyBlock = (blockData) => {\n    setBlockList((blockList) => {\n      const targetIndex = blockList.findIndex((data) => data.sceneId === blockData.sceneId);\n      if (targetIndex === -1) {\n        alert(`수정하고자하는 Scene ${blockData.sceneId}을 찾을 수 없습니다.`);\n        return blockList;\n      }\n      return [...blockList.slice(0, targetIndex), blockData, ...blockList.slice(targetIndex + 1)];\n    });\n    setAppState({\n      isSceneFormOpened: false,\n      modifySceneId: null,\n    });\n  };\n\n  return (\n    <Container>\n      <ControlMenu></ControlMenu>\n      {appState.isSceneFormOpened && <ScriptInput blockList={blockList} createNewBlock={createNewBlock} modifyBlock={modifyBlock}></ScriptInput>}\n      <BlockContainer>\n        <ScriptView></ScriptView>\n      </BlockContainer>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { RecoilRoot } from \"recoil\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}