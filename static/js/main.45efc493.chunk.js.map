{"version":3,"sources":["Utils/api.js","Components/ControlMenu.js","Components/Partials/ScriptBlock.js","Components/ScriptView.js","Components/ScriptInput.js","Utils/Constant.js","App.js","serviceWorker.js","index.js"],"names":["saveBlockList","blockList","localStorage","setItem","JSON","stringify","alert","exportScript","data","filename","type","file","Blob","window","navigator","msSaveOrOpenBlob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","parseInt","Math","random","importScript","callback","input","accept","onchange","event","reader","FileReader","readAsText","onload","parse","result","processFile","target","files","Container","styled","div","ControlButton","button","ControlMenu","toggleSceneForm","setBlockList","onClick","e","confirm","SceneID","CharacterName","SceneScript","OptionGroup","FileDescription","span","Script","props","color","MenuGroup","ul","MenuItem","li","ScriptBlock","sceneId","characterName","sceneScript","characterImage","backgroundImage","sceneSound","options","nextSceneId","sceneType","moveBlockBy","removeBlock","length","map","i","answer","reaction","nextId","key","ScriptView","by","index","findIndex","block","at","tmpArray","slice","removeIndex","concat","isOpend","InputGroup","InputPair","Label","label","TextInput","TextArea","textarea","ScriptInput","createNewBlock","defaultState","useState","formData","setFormData","onInputChange","name","value","dataset","optionIndex","dataValue","undefined","Object","assign","id","data-value","checked","onChange","htmlFor","placeholder","style","display","flex","data-option-index","find","BlockContainer","App","cachedBlockList","getItem","loadBlockList","isSceneFormOpened","setIsSceneFormOpened","opened","blockData","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.45efc493.chunk.js","sourcesContent":["const LOCAL_STORAGE_ID = \"me.1000ship.game-script-tool\";\n\nexport const loadBlockList = () => {\n  let cachedBlockList;\n  try {\n    cachedBlockList = JSON.parse(localStorage.getItem(LOCAL_STORAGE_ID));\n    if (cachedBlockList === null) cachedBlockList = [];\n  } catch {\n    cachedBlockList = [];\n  }\n  return cachedBlockList;\n};\n\nexport const saveBlockList = (blockList) => {\n  try {\n    localStorage.setItem(LOCAL_STORAGE_ID, JSON.stringify(blockList));\n  } catch {\n    alert(\"자동 저장 중 문제 발생\");\n  }\n};\n\nexport const exportScript = (blockList) => {\n  try {\n    download(\n      JSON.stringify(blockList),\n      `script_${parseInt(Math.random() * 1000)}`,\n      \"txt\"\n    );\n  } catch {\n    alert(\"저장하는데 문제가 생겼어요\");\n  }\n};\n\nexport const importScript = (callback) => {\n  try {\n    var input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.accept = \"text/plain, text/html, .jsp\";\n    input.click();\n    input.onchange = function (event) {\n      processFile(event.target.files[0]);\n    };\n    function processFile(file) {\n      var reader = new FileReader();\n      reader.readAsText(file, \"UTF-8\");\n      reader.onload = function () {\n        callback( JSON.parse(reader.result) )\n      };\n    }\n  } catch {\n    alert(\"불러오는데 문제가 생겼어요\");\n  }\n};\n\nfunction download(data, filename, type) {\n  var file = new Blob([data], { type: type });\n  if (window.navigator.msSaveOrOpenBlob)\n    // IE10+\n    window.navigator.msSaveOrOpenBlob(file, filename);\n  else {\n    // Others\n    var a = document.createElement(\"a\"),\n      url = URL.createObjectURL(file);\n    a.href = url;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    setTimeout(function () {\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);\n    }, 0);\n  }\n}\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { exportScript, importScript, saveBlockList } from \"../Utils/api\";\n\nconst Container = styled.div`\n  position: fixed;\n  right: 5px;\n  bottom: 5px;\n  z-index: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ControlButton = styled.button`\n  padding: 5px 5px;\n`;\n\nconst ControlMenu = ({ toggleSceneForm, blockList, setBlockList }) => {\n  const onAddSceneBlockClick = (e) => {\n    toggleSceneForm();\n  };\n\n  const onAddEndingBlockClick = (e) => {};\n\n  const onImportClick = (e) => {\n    importScript((data) => {\n      setBlockList(data);\n      saveBlockList(data);\n    });\n  };\n\n  const onExportClick = (e) => {\n    exportScript(blockList);\n  };\n\n  const onClearScriptClick = (e) => {\n    if (!window.confirm(\"정말 모든 Scene을 삭제할까요??\")) return;\n    setBlockList([]);\n    window.alert(\"삭제했습니다. 원치않았다면 지금 당장 새로고침을 눌러주세요.\");\n  };\n\n  return (\n    <Container>\n      <ControlButton onClick={onClearScriptClick}>Clear Script</ControlButton>\n      <ControlButton onClick={onAddSceneBlockClick}>\n        Add Scene Block\n      </ControlButton>\n      <ControlButton onClick={onAddEndingBlockClick}>\n        Add Ending Block(미완성)\n      </ControlButton>\n      <ControlButton onClick={onImportClick}>Import Script</ControlButton>\n      <ControlButton onClick={onExportClick}>Export Script</ControlButton>\n    </Container>\n  );\n};\n\nexport default ControlMenu;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  background-color: #efefef;\n  padding: 10px;\n  margin: 5px;\n  position: relative;\n`;\nconst SceneID = styled.div`\n  font-weight: 800;\n  cursor: pointer;\n  & small {\n    font-weight: 400;\n    cursor: default;\n    margin-left: 8px;\n  }\n`;\nconst CharacterName = styled.div`\n  font-style: italic;\n  margin-top: 5px;\n`;\nconst SceneScript = styled.div`\n  margin-top: 5px;\n  background-color: white;\n  padding: 5px;\n  border-radius: 3px;\n`;\nconst OptionGroup = styled.div``;\nconst FileDescription = styled.span`\n  margin-right: 10px;\n  font-size: 13px;\n`;\nconst Script = styled.span`\n  background-color: ${props => props.color ? props.color : 'white'};\n  border-radius: 5px;\n  padding: 3px;\n  display: inline-block;\n`;\n\nconst MenuGroup = styled.ul`\n  margin: 0px;\n  padding: 0px;\n  list-style: none;\n  position: absolute;\n  right: 5px;\n  top: 5px;\n  display: flex;\n`;\nconst MenuItem = styled.li`\n  font-size: 12px;\n  margin-left: 6px;\n  cursor: pointer;\n  &:hover {\n    font-weight: bolder;\n  }\n`;\n\nfunction ScriptBlock(props) {\n  var {\n    sceneId,\n    characterName,\n    sceneScript,\n    characterImage,\n    backgroundImage,\n    sceneSound,\n    options,\n    nextSceneId,\n    sceneType,\n    moveBlockBy,\n    removeBlock,\n  } = props;\n\n  const onRemoveClick = () => {\n    removeBlock(sceneId)\n  };\n\n  return (\n    <Container>\n      <MenuGroup>\n        <MenuItem onClick={e => moveBlockBy(sceneId, -1)}>위로</MenuItem>\n        <MenuItem onClick={e => moveBlockBy(sceneId, 1)}>아래로</MenuItem>\n        <MenuItem onClick={onRemoveClick}>삭제</MenuItem>\n        <MenuItem>수정</MenuItem>\n      </MenuGroup>\n      <SceneID>{sceneId} <small>{sceneType === \"text\" ? \"💬채팅\" : \"👥만남\"}</small></SceneID>\n      <CharacterName>{characterName}</CharacterName>\n      <SceneScript>{sceneScript}</SceneScript>\n      {characterImage?.length > 0 && <FileDescription>🕺🏻{characterImage}</FileDescription>}\n      {backgroundImage?.length > 0 && <FileDescription>🏞{backgroundImage}</FileDescription>}\n      {sceneSound?.length > 0 && <FileDescription>🔈{sceneSound}</FileDescription>}\n      {options.length === 0 ? \n        <div>Next Scene ID : {nextSceneId}</div>\n      : (\n        <ol>\n          {options.map(({ answer, reaction, nextId }, i) => (\n            <li key={i}>\n              {answer?.length > 0 ? <Script color=\"lightcyan\">{answer}</Script> : null}\n              {answer?.length > 0 ? ' → ' : null}\n              {reaction?.length > 0 ? <Script color='lightyellow'>{reaction}</Script> : null}\n              {reaction?.length > 0 ? ' → ' : null}\n              {nextId}\n            </li>\n          ))}\n        </ol>\n      )}\n      <OptionGroup></OptionGroup>\n    </Container>\n  );\n}\n\nexport default ScriptBlock;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ScriptBlock from \"./Partials/ScriptBlock\";\nimport { saveBlockList } from \"../Utils/api\";\n\nconst Container = styled.div`\n  padding: 5px 0px;\n`;\n\nfunction ScriptView({ blockList, setBlockList }) {\n  const moveBlockBy = (sceneId, by) => {\n    const index = blockList.findIndex((block) => (block.sceneId === sceneId));\n    const at = index + by;\n    if (at < 0 || at >= blockList.length) return;\n    setBlockList((blockList) => {\n      const tmpArray = [\n        ...blockList.slice(0, index),\n        ...blockList.slice(index + 1),\n      ];\n      const result = [\n        ...tmpArray.slice(0, at),\n        blockList[index],\n        ...tmpArray.slice(at),\n      ]\n      saveBlockList(result)\n      return result;\n    });\n  };\n\n  const removeBlock = (sceneId) => {\n    if( !window.confirm(\"삭제한 후 되돌릴 수 없습니다. 삭제하시겠습니까?\") ) return\n    setBlockList((blockList) => {\n      const removeIndex = blockList.findIndex(\n        (block) => block.sceneId === sceneId\n      );\n      saveBlockList(\n        blockList.slice(0, removeIndex).concat(blockList.slice(removeIndex + 1))\n      );\n      return blockList\n        .slice(0, removeIndex)\n        .concat(blockList.slice(removeIndex + 1));\n    });\n  };\n\n  return (\n    <Container>\n      {blockList.map(\n        (\n          {\n            sceneId,\n            characterName,\n            sceneScript,\n            characterImage,\n            backgroundImage,\n            sceneSound,\n            options,\n            nextSceneId,\n            sceneType,\n          },\n          i\n        ) => (\n          <ScriptBlock\n            key={sceneId}\n            sceneId={sceneId}\n            characterName={characterName}\n            sceneScript={sceneScript}\n            characterImage={characterImage}\n            backgroundImage={backgroundImage}\n            sceneSound={sceneSound}\n            options={options}\n            nextSceneId={nextSceneId}\n            sceneType={sceneType}\n            moveBlockBy={moveBlockBy}\n            removeBlock={removeBlock}\n          ></ScriptBlock>\n        )\n      )}\n    </Container>\n  );\n}\n\nexport default ScriptView;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { OPTION_MINIMUM_COUNT } from \"../Utils/Constant\";\n\nconst Container = styled.div`\n  display: ${({isOpend}) => isOpend ? 'block' :'none' };\n  padding: 10px 0px;\n  border-bottom: 1px solid gray;\n  z-index: 1;\n`;\nconst InputGroup = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst InputPair = styled.div`\n  padding: 3px 0px;\n`;\nconst Label = styled.label``;\nconst TextInput = styled.input``;\nconst TextArea = styled.textarea`\n  width: 100%;\n  height: 50px;\n  display: block;\n`;\n\nfunction ScriptInput({ createNewBlock, blockList, isOpend }) {\n  const defaultState = {\n    sceneId: \"\",\n    characterName: \"\",\n    sceneScript: \"\",\n    characterImage: \"\",\n    backgroundImage: \"\",\n    sceneSound: \"\",\n    nextSceneId: \"\",\n    options: [\n      {\n        answer: \"\",\n        reaction: \"\",\n        nextId: \"\",\n      },\n    ],\n    sceneType: \"meet\",\n  };\n  let [formData, setFormData] = useState(defaultState);\n  let {\n    sceneId,\n    characterName,\n    sceneScript,\n    characterImage,\n    backgroundImage,\n    sceneSound,\n    nextSceneId,\n    options,\n    sceneType,\n  } = formData;\n\n  const onInputChange = (e) => {\n    const {\n      name,\n      value,\n      dataset: { optionIndex, value: dataValue },\n    } = e.target;\n    if (formData[name] === undefined && optionIndex === undefined) return;\n    if ( dataValue !== undefined ) // for radio button\n      setFormData({\n        ...formData,\n        [name]: dataValue,\n      });\n    else if (optionIndex === undefined) // for text input\n      setFormData({\n        ...formData,\n        [name]: value,\n      });\n    else { // for option text input\n      setFormData((data) => {\n        data.options[optionIndex][name] = value;\n        return Object.assign({}, data);\n      });\n    }\n  };\n\n  const onOptionAddClick = (e) => {\n    setFormData({\n      ...formData,\n      options: formData.options.concat({\n        answer: \"\",\n        reaction: \"\",\n        nextId: \"\",\n      }),\n    });\n  };\n\n  const onOptionRemoveClick = (e) => {\n    if (options.length > OPTION_MINIMUM_COUNT)\n      setFormData({\n        ...formData,\n        options: options.slice(0, options.length - 1),\n      });\n  };\n\n  const onNewBlockClick = (e) => {\n    if (sceneId.length === 0) alert(\"Scene ID를 입력하세요.\");\n    else if (blockList.find((block) => block.sceneId === sceneId && block.sceneType === sceneType)) {\n      alert(\"중복되는 Scene Type과 Scene ID가 있습니다.\");\n    } else if (createNewBlock) {\n      createNewBlock(Object.assign({}, formData));\n      setFormData(defaultState);\n    }\n  };\n\n  return (\n    <Container isOpend={isOpend}>\n      <InputPair>\n        <span>Scene Type : </span>\n        <TextInput\n          name=\"sceneType\"\n          id=\"scene-type-meet\"\n          data-value=\"meet\"\n          type=\"radio\"\n          checked={sceneType === \"meet\"}\n          onChange={onInputChange}\n        ></TextInput>\n        <Label htmlFor=\"scene-type-meet\">만남</Label>\n        <TextInput\n          name=\"sceneType\"\n          id=\"scene-type-text\"\n          data-value=\"text\"\n          type=\"radio\"\n          checked={sceneType === \"text\"}\n          onChange={onInputChange}\n        ></TextInput>\n        <Label htmlFor=\"scene-type-text\">문자</Label>\n      </InputPair>\n      <InputPair>\n        <Label htmlFor=\"scene-id\">Scene ID : </Label>\n        <TextInput\n          name=\"sceneId\"\n          id=\"scene-id\"\n          type=\"text\"\n          placeholder=\"#3-1\"\n          value={sceneId}\n          onChange={onInputChange}\n        ></TextInput>\n      </InputPair>\n      <InputPair>\n        <Label htmlFor=\"character-name\">Character Name : </Label>\n        <TextInput\n          name=\"characterName\"\n          value={characterName}\n          onChange={onInputChange}\n          id=\"character-name\"\n          type=\"text\"\n          placeholder=\"John Mayer\"\n        ></TextInput>\n      </InputPair>\n\n      <InputPair>\n        <Label htmlFor=\"scene-script\">Scene Script : </Label>\n        <TextArea\n          name=\"sceneScript\"\n          value={sceneScript}\n          onChange={onInputChange}\n          id=\"scene-script\"\n          placeholder=\"Hello, the weather is sunny. Shall we go picnic?\"\n        ></TextArea>\n      </InputPair>\n\n      <InputGroup>\n        <InputPair>\n          <Label htmlFor=\"character-image\">Character Image : </Label>\n          <TextInput\n            name=\"characterImage\"\n            value={characterImage}\n            onChange={onInputChange}\n            id=\"character-image\"\n            type=\"text\"\n            placeholder=\"smile.png (선택입력)\"\n          ></TextInput>\n        </InputPair>\n        <InputPair>\n          <Label htmlFor=\"background-image\">Background Image : </Label>\n          <TextInput\n            name=\"backgroundImage\"\n            value={backgroundImage}\n            onChange={onInputChange}\n            id=\"background-image\"\n            type=\"text\"\n            placeholder=\"park.png (선택입력)\"\n          ></TextInput>\n        </InputPair>\n        <InputPair>\n          <Label htmlFor=\"scene-sound\">Scene Sound : </Label>\n          <TextInput\n            name=\"sceneSound\"\n            value={sceneSound}\n            onChange={onInputChange}\n            id=\"scene-sound\"\n            type=\"text\"\n            placeholder=\"laugh.mp3 (선택입력)\"\n          ></TextInput>\n        </InputPair>\n      </InputGroup>\n\n      {options.length > 0 ? (\n        options.map(({ answer, reaction, nextId }, i) => (\n          <InputPair key={i} style={{ display: \"flex\" }}>\n            <Label>{i + 1}. </Label>\n            <TextInput\n              style={{ flex: 1 }}\n              type=\"text\"\n              placeholder=\"(대답) I like too\"\n              name=\"answer\"\n              data-option-index={i}\n              value={answer}\n              onChange={onInputChange}\n            ></TextInput>\n            <TextInput\n              style={{ flex: 1 }}\n              type=\"text\"\n              placeholder=\"(반응) Let's meet now\"\n              name=\"reaction\"\n              data-option-index={i}\n              value={reaction}\n              onChange={onInputChange}\n            ></TextInput>\n            <TextInput\n              type=\"text\"\n              placeholder={`#3-${i + 2}`}\n              name=\"nextId\"\n              data-option-index={i}\n              value={nextId}\n              onChange={onInputChange}\n            ></TextInput>\n          </InputPair>\n        ))\n      ) : (\n        <InputPair>\n          <Label htmlFor=\"next-scene-id\">Next Scene ID : </Label>\n          <TextInput\n            name=\"nextSceneId\"\n            value={nextSceneId}\n            onChange={onInputChange}\n            id=\"next-scene-id\"\n            type=\"text\"\n            placeholder=\"#4-1\"\n          ></TextInput>\n        </InputPair>\n      )}\n      <button onClick={onOptionAddClick}>선택지 추가</button>\n      {options.length > 0 && (\n        <button onClick={onOptionRemoveClick}>선택지 삭제</button>\n      )}\n      <br />\n      <button onClick={onNewBlockClick}>블럭 추가</button>\n    </Container>\n  );\n}\n\nexport default ScriptInput;\n","\nexport const OPTION_MINIMUM_COUNT = 0","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport ControlMenu from \"./Components/ControlMenu\";\nimport ScriptView from \"./Components/ScriptView\";\nimport ScriptInput from \"./Components/ScriptInput\";\nimport { loadBlockList, saveBlockList } from \"./Utils/api\";\n\nconst Container = styled.div`\n  @media (min-width: 800px) {\n    width: 80%;\n  }\n  margin: auto auto;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst BlockContainer = styled.div`\n  overflow-y: auto;\n`;\n\nfunction App() {\n  const cachedBlockList = loadBlockList();\n  let [blockList, setBlockList] = useState(cachedBlockList);\n  let [isSceneFormOpened, setIsSceneFormOpened] = useState(false);\n\n  const toggleSceneForm = () => {\n    setIsSceneFormOpened((opened) => !opened);\n  };\n\n  const createNewBlock = (blockData) => {\n    saveBlockList([...blockList, blockData]);\n    setBlockList([...blockList, blockData]);\n  };\n\n  return (\n    <Container>\n      <ControlMenu\n        toggleSceneForm={toggleSceneForm}\n        blockList={blockList}\n        setBlockList={setBlockList}\n      ></ControlMenu>\n      <ScriptInput\n        blockList={blockList}\n        createNewBlock={createNewBlock}\n        isOpend={isSceneFormOpened}\n      ></ScriptInput>\n      <BlockContainer>\n        <ScriptView\n          blockList={blockList}\n          setBlockList={setBlockList}\n        ></ScriptView>\n      </BlockContainer>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}