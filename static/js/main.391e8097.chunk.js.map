{"version":3,"sources":["Utils/api.js","Components/ControlMenu.js","Components/Partials/ScriptBlock.js","Components/ScriptView.js","Components/ScriptInput/ScriptInputPresenter.js","Components/ScriptInput/constant.js","Components/ScriptInput/ScriptInputController.js","Components/ScriptInput/index.js","Utils/Constant.js","App.js","serviceWorker.js","index.js"],"names":["saveBlockList","blockList","localStorage","setItem","JSON","stringify","alert","exportScript","data","filename","type","file","Blob","window","navigator","msSaveOrOpenBlob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","parseInt","Math","random","importScript","callback","input","accept","onchange","event","reader","FileReader","readAsText","onload","parse","result","processFile","target","files","Container","styled","div","ControlButton","button","ControlMenu","setBlockList","setModifySceneId","setIsSceneFormOpened","onClick","e","confirm","isOpend","SceneID","CharacterName","SceneScript","OptionGroup","FileDescription","span","Script","props","color","MenuGroup","ul","MenuItem","li","ScriptBlock","sceneId","characterName","sceneScript","characterImage","backgroundImage","sceneSound","options","nextSceneId","sceneType","moveBlockBy","removeBlock","modifyBlock","length","map","i","answer","reaction","nextId","key","ScriptView","by","index","findIndex","block","at","tmpArray","slice","removeIndex","concat","InputGroup","InputPair","Label","label","TextInput","TextArea","textarea","ScriptInputPresenter","isModifyMode","formData","onInputChange","onOptionAddClick","onOptionRemoveClick","onNewBlockClick","onModifyBlockClick","name","id","data-value","checked","onChange","htmlFor","placeholder","value","disabled","style","display","flex","data-option-index","DEFAULT_SCENE","ScriptInput","ScriptInputController","createNewBlock","modifySceneId","defaultScene","find","useEffect","setFormData","useState","dataset","optionIndex","dataValue","undefined","Object","assign","BlockContainer","App","cachedBlockList","getItem","loadBlockList","isSceneFormOpened","blockData","targetIndex","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.391e8097.chunk.js","sourcesContent":["const LOCAL_STORAGE_ID = \"me.1000ship.game-script-tool\";\n\nexport const loadBlockList = () => {\n  let cachedBlockList;\n  try {\n    cachedBlockList = JSON.parse(localStorage.getItem(LOCAL_STORAGE_ID));\n    if (cachedBlockList === null) cachedBlockList = [];\n  } catch {\n    cachedBlockList = [];\n  }\n  return cachedBlockList;\n};\n\nexport const saveBlockList = (blockList) => {\n  try {\n    localStorage.setItem(LOCAL_STORAGE_ID, JSON.stringify(blockList));\n  } catch {\n    alert(\"자동 저장 중 문제 발생\");\n  }\n};\n\nexport const exportScript = (blockList) => {\n  try {\n    download(\n      JSON.stringify(blockList),\n      `script_${parseInt(Math.random() * 1000)}`,\n      \"txt\"\n    );\n  } catch {\n    alert(\"저장하는데 문제가 생겼어요\");\n  }\n};\n\nexport const importScript = (callback) => {\n  try {\n    var input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.accept = \"text/plain, text/html, .jsp\";\n    input.click();\n    input.onchange = function (event) {\n      processFile(event.target.files[0]);\n    };\n    function processFile(file) {\n      var reader = new FileReader();\n      reader.readAsText(file, \"UTF-8\");\n      reader.onload = function () {\n        callback( JSON.parse(reader.result) )\n      };\n    }\n  } catch {\n    alert(\"불러오는데 문제가 생겼어요\");\n  }\n};\n\nfunction download(data, filename, type) {\n  var file = new Blob([data], { type: type });\n  if (window.navigator.msSaveOrOpenBlob)\n    // IE10+\n    window.navigator.msSaveOrOpenBlob(file, filename);\n  else {\n    // Others\n    var a = document.createElement(\"a\"),\n      url = URL.createObjectURL(file);\n    a.href = url;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    setTimeout(function () {\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);\n    }, 0);\n  }\n}\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { exportScript, importScript, saveBlockList } from \"../Utils/api\";\n\nconst Container = styled.div`\n  position: fixed;\n  right: 5px;\n  bottom: 5px;\n  z-index: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ControlButton = styled.button`\n  padding: 5px 5px;\n`;\n\nconst ControlMenu = ({\n  blockList,\n  setBlockList,\n  setModifySceneId,\n  setIsSceneFormOpened,\n}) => {\n  const onAddSceneBlockClick = (e) => {\n    setIsSceneFormOpened((isOpend) => !isOpend);\n    setModifySceneId(null);\n  };\n\n  const onAddEndingBlockClick = (e) => {};\n\n  const onImportClick = (e) => {\n    importScript((data) => {\n      setBlockList(data);\n      saveBlockList(data);\n    });\n  };\n\n  const onExportClick = (e) => {\n    exportScript(blockList);\n  };\n\n  const onClearScriptClick = (e) => {\n    if (!window.confirm(\"정말 모든 Scene을 삭제할까요??\")) return;\n    setBlockList([]);\n    window.alert(\"삭제했습니다. 원치않았다면 지금 당장 새로고침을 눌러주세요.\");\n  };\n\n  return (\n    <Container>\n      <ControlButton onClick={onClearScriptClick}>Clear Script</ControlButton>\n      <ControlButton onClick={onAddSceneBlockClick}>\n        Add Scene Block\n      </ControlButton>\n      <ControlButton onClick={onAddEndingBlockClick}>\n        Add Ending Block(미완성)\n      </ControlButton>\n      <ControlButton onClick={onImportClick}>Import Script</ControlButton>\n      <ControlButton onClick={onExportClick}>Export Script</ControlButton>\n    </Container>\n  );\n};\n\nexport default ControlMenu;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  background-color: #efefef;\n  padding: 10px;\n  margin: 5px;\n  position: relative;\n`;\nconst SceneID = styled.div`\n  font-weight: 800;\n  cursor: pointer;\n  & small {\n    font-weight: 400;\n    cursor: default;\n    margin-left: 8px;\n  }\n`;\nconst CharacterName = styled.div`\n  font-style: italic;\n  margin-top: 5px;\n`;\nconst SceneScript = styled.div`\n  margin-top: 5px;\n  background-color: white;\n  padding: 5px;\n  border-radius: 3px;\n`;\nconst OptionGroup = styled.div``;\nconst FileDescription = styled.span`\n  margin-right: 10px;\n  font-size: 13px;\n`;\nconst Script = styled.span`\n  background-color: ${props => props.color ? props.color : 'white'};\n  border-radius: 5px;\n  padding: 3px;\n  display: inline-block;\n`;\n\nconst MenuGroup = styled.ul`\n  margin: 0px;\n  padding: 0px;\n  list-style: none;\n  position: absolute;\n  right: 5px;\n  top: 5px;\n  display: flex;\n`;\nconst MenuItem = styled.li`\n  font-size: 12px;\n  margin-left: 6px;\n  cursor: pointer;\n  &:hover {\n    font-weight: bolder;\n  }\n`;\n\nfunction ScriptBlock(props) {\n  var {\n    sceneId,\n    characterName,\n    sceneScript,\n    characterImage,\n    backgroundImage,\n    sceneSound,\n    options,\n    nextSceneId,\n    sceneType,\n    moveBlockBy,\n    removeBlock,\n    modifyBlock,\n  } = props;\n\n  const onRemoveClick = () => {\n    removeBlock(sceneId)\n  };\n\n  const onModifyClick = () => {\n    modifyBlock(sceneId)\n  }\n\n  return (\n    <Container>\n      <MenuGroup>\n        <MenuItem onClick={e => moveBlockBy(sceneId, -1)}>위로</MenuItem>\n        <MenuItem onClick={e => moveBlockBy(sceneId, 1)}>아래로</MenuItem>\n        <MenuItem onClick={onRemoveClick}>삭제</MenuItem>\n        <MenuItem onClick={onModifyClick}>수정</MenuItem>\n      </MenuGroup>\n      <SceneID>{sceneId} <small>{sceneType === \"text\" ? \"💬채팅\" : \"👥만남\"}</small></SceneID>\n      <CharacterName>{characterName}</CharacterName>\n      <SceneScript>{sceneScript}</SceneScript>\n      {characterImage?.length > 0 && <FileDescription>🕺🏻{characterImage}</FileDescription>}\n      {backgroundImage?.length > 0 && <FileDescription>🏞{backgroundImage}</FileDescription>}\n      {sceneSound?.length > 0 && <FileDescription>🔈{sceneSound}</FileDescription>}\n      {options.length === 0 ? \n        <div>Next Scene ID : {nextSceneId}</div>\n      : (\n        <ol>\n          {options.map(({ answer, reaction, nextId }, i) => (\n            <li key={i}>\n              {answer?.length > 0 ? <Script color=\"lightcyan\">{answer}</Script> : null}\n              {answer?.length > 0 ? ' → ' : null}\n              {reaction?.length > 0 ? <Script color='lightyellow'>{reaction}</Script> : null}\n              {reaction?.length > 0 ? ' → ' : null}\n              {nextId}\n            </li>\n          ))}\n        </ol>\n      )}\n      <OptionGroup></OptionGroup>\n    </Container>\n  );\n}\n\nexport default ScriptBlock;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ScriptBlock from \"./Partials/ScriptBlock\";\nimport { saveBlockList } from \"../Utils/api\";\n\nconst Container = styled.div`\n  padding: 5px 0px;\n`;\n\nfunction ScriptView({\n  blockList,\n  setBlockList,\n  setModifySceneId,\n  setIsSceneFormOpened,\n}) {\n  const moveBlockBy = (sceneId, by) => {\n    const index = blockList.findIndex((block) => block.sceneId === sceneId);\n    const at = index + by;\n    if (at < 0 || at >= blockList.length) return;\n    setBlockList((blockList) => {\n      const tmpArray = [\n        ...blockList.slice(0, index),\n        ...blockList.slice(index + 1),\n      ];\n      const result = [\n        ...tmpArray.slice(0, at),\n        blockList[index],\n        ...tmpArray.slice(at),\n      ];\n      saveBlockList(result);\n      return result;\n    });\n  };\n\n  const removeBlock = (sceneId) => {\n    if (!window.confirm(\"삭제한 후 되돌릴 수 없습니다. 삭제하시겠습니까?\"))\n      return;\n    setBlockList((blockList) => {\n      const removeIndex = blockList.findIndex(\n        (block) => block.sceneId === sceneId\n      );\n      saveBlockList(\n        blockList.slice(0, removeIndex).concat(blockList.slice(removeIndex + 1))\n      );\n      return blockList\n        .slice(0, removeIndex)\n        .concat(blockList.slice(removeIndex + 1));\n    });\n  };\n\n  const modifyBlock = (sceneId) => {\n    setIsSceneFormOpened( true )\n    setModifySceneId( sceneId )\n  }\n\n  return (\n    <Container>\n      {blockList.map(\n        (\n          {\n            sceneId,\n            characterName,\n            sceneScript,\n            characterImage,\n            backgroundImage,\n            sceneSound,\n            options,\n            nextSceneId,\n            sceneType,\n          },\n          i\n        ) => (\n          <ScriptBlock\n            key={sceneId}\n            sceneId={sceneId}\n            characterName={characterName}\n            sceneScript={sceneScript}\n            characterImage={characterImage}\n            backgroundImage={backgroundImage}\n            sceneSound={sceneSound}\n            options={options}\n            nextSceneId={nextSceneId}\n            sceneType={sceneType}\n            moveBlockBy={moveBlockBy}\n            removeBlock={removeBlock}\n            modifyBlock={modifyBlock}\n          ></ScriptBlock>\n        )\n      )}\n    </Container>\n  );\n}\n\nexport default ScriptView;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: ${({ isOpend }) => (isOpend ? \"block\" : \"none\")};\n  padding: 10px 0px;\n  border-bottom: 1px solid gray;\n  z-index: 1;\n`;\nconst InputGroup = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst InputPair = styled.div`\n  padding: 3px 0px;\n`;\nconst Label = styled.label``;\nconst TextInput = styled.input``;\nconst TextArea = styled.textarea`\n  width: 100%;\n  height: 50px;\n  display: block;\n`;\n\nconst ScriptInputPresenter = ({\n  isOpend,\n  isModifyMode,\n  formData: {\n    sceneId,\n    characterName,\n    sceneScript,\n    characterImage,\n    backgroundImage,\n    sceneSound,\n    nextSceneId,\n    options,\n    sceneType,\n  },\n  onInputChange,\n  onOptionAddClick,\n  onOptionRemoveClick,\n  onNewBlockClick,\n  onModifyBlockClick,\n}) => (\n  <Container isOpend={isOpend}>\n    <InputPair>\n      <span>Scene Type : </span>\n      <TextInput\n        name=\"sceneType\"\n        id=\"scene-type-meet\"\n        data-value=\"meet\"\n        type=\"radio\"\n        checked={sceneType === \"meet\"}\n        onChange={onInputChange}\n      ></TextInput>\n      <Label htmlFor=\"scene-type-meet\">만남</Label>\n      <TextInput\n        name=\"sceneType\"\n        id=\"scene-type-text\"\n        data-value=\"text\"\n        type=\"radio\"\n        checked={sceneType === \"text\"}\n        onChange={onInputChange}\n      ></TextInput>\n      <Label htmlFor=\"scene-type-text\">문자</Label>\n    </InputPair>\n    <InputPair>\n      <Label htmlFor=\"scene-id\">Scene ID : </Label>\n      <TextInput\n        name=\"sceneId\"\n        id=\"scene-id\"\n        type=\"text\"\n        placeholder=\"#3-1\"\n        value={sceneId}\n        onChange={onInputChange}\n        disabled={isModifyMode}\n      ></TextInput>\n      {isModifyMode && <small> 수정 중</small>}\n    </InputPair>\n    <InputPair>\n      <Label htmlFor=\"character-name\">Character Name : </Label>\n      <TextInput\n        name=\"characterName\"\n        value={characterName}\n        onChange={onInputChange}\n        id=\"character-name\"\n        type=\"text\"\n        placeholder=\"John Mayer\"\n      ></TextInput>\n    </InputPair>\n\n    <InputPair>\n      <Label htmlFor=\"scene-script\">Scene Script : </Label>\n      <TextArea\n        name=\"sceneScript\"\n        value={sceneScript}\n        onChange={onInputChange}\n        id=\"scene-script\"\n        placeholder=\"Hello, the weather is sunny. Shall we go picnic?\"\n      ></TextArea>\n    </InputPair>\n\n    <InputGroup>\n      <InputPair>\n        <Label htmlFor=\"character-image\">Character Image : </Label>\n        <TextInput\n          name=\"characterImage\"\n          value={characterImage}\n          onChange={onInputChange}\n          id=\"character-image\"\n          type=\"text\"\n          placeholder=\"smile.png (선택입력)\"\n        ></TextInput>\n      </InputPair>\n      <InputPair>\n        <Label htmlFor=\"background-image\">Background Image : </Label>\n        <TextInput\n          name=\"backgroundImage\"\n          value={backgroundImage}\n          onChange={onInputChange}\n          id=\"background-image\"\n          type=\"text\"\n          placeholder=\"park.png (선택입력)\"\n        ></TextInput>\n      </InputPair>\n      <InputPair>\n        <Label htmlFor=\"scene-sound\">Scene Sound : </Label>\n        <TextInput\n          name=\"sceneSound\"\n          value={sceneSound}\n          onChange={onInputChange}\n          id=\"scene-sound\"\n          type=\"text\"\n          placeholder=\"laugh.mp3 (선택입력)\"\n        ></TextInput>\n      </InputPair>\n    </InputGroup>\n\n    {options.length > 0 ? (\n      options.map(({ answer, reaction, nextId }, i) => (\n        <InputPair key={i} style={{ display: \"flex\" }}>\n          <Label>{i + 1}. </Label>\n          <TextInput\n            style={{ flex: 1 }}\n            type=\"text\"\n            placeholder=\"(대답) I like too\"\n            name=\"answer\"\n            data-option-index={i}\n            value={answer}\n            onChange={onInputChange}\n          ></TextInput>\n          <TextInput\n            style={{ flex: 1 }}\n            type=\"text\"\n            placeholder=\"(반응) Let's meet now\"\n            name=\"reaction\"\n            data-option-index={i}\n            value={reaction}\n            onChange={onInputChange}\n          ></TextInput>\n          <TextInput\n            type=\"text\"\n            placeholder={`#3-${i + 2}`}\n            name=\"nextId\"\n            data-option-index={i}\n            value={nextId}\n            onChange={onInputChange}\n          ></TextInput>\n        </InputPair>\n      ))\n    ) : (\n      <InputPair>\n        <Label htmlFor=\"next-scene-id\">Next Scene ID : </Label>\n        <TextInput\n          name=\"nextSceneId\"\n          value={nextSceneId}\n          onChange={onInputChange}\n          id=\"next-scene-id\"\n          type=\"text\"\n          placeholder=\"#4-1\"\n        ></TextInput>\n      </InputPair>\n    )}\n    <button onClick={onOptionAddClick}>선택지 추가</button>\n    {options.length > 0 && (\n      <button onClick={onOptionRemoveClick}>선택지 삭제</button>\n    )}\n    <br />\n    <button onClick={isModifyMode ? onModifyBlockClick : onNewBlockClick}>\n      {isModifyMode ? \"블럭 수정\" : \"블럭 추가\"}\n    </button>\n  </Container>\n);\n\nexport default ScriptInputPresenter;\n","export const DEFAULT_SCENE = {\n  sceneId: \"\",\n  characterName: \"\",\n  sceneScript: \"\",\n  characterImage: \"\",\n  backgroundImage: \"\",\n  sceneSound: \"\",\n  nextSceneId: \"\",\n  options: [\n    {\n      answer: \"\",\n      reaction: \"\",\n      nextId: \"\",\n    },\n  ],\n  sceneType: \"meet\",\n};\n","import React, { useState, useEffect } from \"react\";\nimport ScriptInputPresenter from \"./ScriptInputPresenter\";\nimport { OPTION_MINIMUM_COUNT } from \"../../Utils/Constant\";\nimport { DEFAULT_SCENE } from \"./constant\";\n\nfunction ScriptInput({\n  createNewBlock,\n  modifyBlock,\n  blockList,\n  isOpend,\n  modifySceneId = null,\n}) {\n  const defaultScene = modifySceneId\n    ? blockList.find((data) => data.sceneId === modifySceneId)\n    : DEFAULT_SCENE;\n  useEffect(() => {\n    setFormData(defaultScene);\n  }, [defaultScene]);\n\n  let [formData, setFormData] = useState(defaultScene);\n  let { sceneId, options } = formData;\n\n  const onInputChange = (e) => {\n    const {\n      name,\n      value,\n      dataset: { optionIndex, value: dataValue },\n    } = e.target;\n    if (formData[name] === undefined && optionIndex === undefined) return;\n    if (dataValue !== undefined)\n      // for radio button\n      setFormData({\n        ...formData,\n        [name]: dataValue,\n      });\n    else if (optionIndex === undefined)\n      // for text input\n      setFormData({\n        ...formData,\n        [name]: value,\n      });\n    else {\n      // for option text input\n      setFormData((data) => {\n        data.options[optionIndex][name] = value;\n        return Object.assign({}, data);\n      });\n    }\n  };\n\n  const onOptionAddClick = (e) => {\n    setFormData({\n      ...formData,\n      options: formData.options.concat({\n        answer: \"\",\n        reaction: \"\",\n        nextId: \"\",\n      }),\n    });\n  };\n\n  const onOptionRemoveClick = (e) => {\n    if (options.length > OPTION_MINIMUM_COUNT)\n      setFormData({\n        ...formData,\n        options: options.slice(0, options.length - 1),\n      });\n  };\n\n  const onNewBlockClick = (e) => {\n    if (sceneId.length === 0) alert(\"Scene ID를 입력하세요.\");\n    else if (blockList.find((block) => block.sceneId === sceneId)) {\n      alert(\"중복되는 Scene Type과 Scene ID가 있습니다.\");\n    } else if (createNewBlock) {\n      createNewBlock(Object.assign({}, formData));\n      setFormData(defaultScene);\n    }\n  };\n\n  const onModifyBlockClick = (e) => {\n    modifyBlock(Object.assign({}, formData));\n  };\n\n  return (\n    <ScriptInputPresenter\n      isOpend={isOpend}\n      isModifyMode={modifySceneId !== null}\n      formData={formData}\n      onInputChange={onInputChange}\n      onOptionAddClick={onOptionAddClick}\n      onOptionRemoveClick={onOptionRemoveClick}\n      onNewBlockClick={onNewBlockClick}\n      onModifyBlockClick={onModifyBlockClick}\n    ></ScriptInputPresenter>\n  );\n}\n\nexport default ScriptInput;\n","import ScriptInputController from \"./ScriptInputController\";\n\nexport default ScriptInputController;\n","\nexport const OPTION_MINIMUM_COUNT = 0","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport ControlMenu from \"./Components/ControlMenu\";\nimport ScriptView from \"./Components/ScriptView\";\nimport ScriptInput from \"./Components/ScriptInput\";\nimport { loadBlockList, saveBlockList } from \"./Utils/api\";\n\nconst Container = styled.div`\n  @media (min-width: 800px) {\n    width: 80%;\n  }\n  margin: auto auto;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst BlockContainer = styled.div`\n  overflow-y: auto;\n`;\n\nfunction App() {\n  const cachedBlockList = loadBlockList();\n  let [blockList, setBlockList] = useState(cachedBlockList);\n  let [isSceneFormOpened, setIsSceneFormOpened] = useState(false);\n  let [modifySceneId, setModifySceneId] = useState(null);\n\n  const createNewBlock = (blockData) => {\n    saveBlockList([...blockList, blockData]);\n    setBlockList([...blockList, blockData]);\n  };\n\n  const modifyBlock = (blockData) => {\n    const targetIndex = blockList.findIndex(\n      (data) => data.sceneId === blockData.sceneId\n    );\n    if (targetIndex === -1) {\n      alert(`수정하고자하는 Scene ${blockData.sceneId}을 찾을 수 없습니다.`);\n      return;\n    }\n    saveBlockList([\n      ...blockList.slice(0, targetIndex),\n      blockData,\n      ...blockList.slice(targetIndex + 1),\n    ]);\n    setBlockList([\n      ...blockList.slice(0, targetIndex),\n      blockData,\n      ...blockList.slice(targetIndex + 1),\n    ]);\n    setModifySceneId(null);\n    setIsSceneFormOpened(false);\n  };\n\n  return (\n    <Container>\n      <ControlMenu\n        blockList={blockList}\n        setBlockList={setBlockList}\n        setModifySceneId={setModifySceneId}\n        setIsSceneFormOpened={setIsSceneFormOpened}\n      ></ControlMenu>\n      <ScriptInput\n        blockList={blockList}\n        createNewBlock={createNewBlock}\n        modifyBlock={modifyBlock}\n        isOpend={isSceneFormOpened}\n        modifySceneId={modifySceneId}\n      ></ScriptInput>\n      <BlockContainer>\n        <ScriptView\n          blockList={blockList}\n          setBlockList={setBlockList}\n          setModifySceneId={setModifySceneId}\n          setIsSceneFormOpened={setIsSceneFormOpened}\n        ></ScriptView>\n      </BlockContainer>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}